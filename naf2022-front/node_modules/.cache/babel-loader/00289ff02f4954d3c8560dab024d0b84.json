{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import axios from'axios';import config from'../config/env';import{useState,useCallback,useMemo,useEffect}from'react';// Next we make an 'instance' of it\nvar axiosConfig=axios.create({// .. where we make our configurations\nbaseURL:\"\".concat(config.backendUrl,\"/api\"),withCredentials:true});var useAxiosLoader=function useAxiosLoader(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),counter=_useState2[0],setCounter=_useState2[1];var inc=useCallback(function(){return setCounter(function(counter){return counter+1;});},[setCounter]);// add to counter\nvar dec=useCallback(function(){return setCounter(function(counter){return counter-1;});},[setCounter]);// remove from counter\nvar interceptors=useMemo(function(){return{request:function request(config){return inc(),config;},response:function response(_response){return dec(),_response;},error:function error(_error){return dec(),Promise.reject(_error);}};},[inc,dec]);// create the interceptors\nuseEffect(function(){// add request interceptors\nvar reqInterceptor=axiosConfig.interceptors.request.use(interceptors.request,interceptors.error);// add response interceptors\nvar resInterceptor=axiosConfig.interceptors.response.use(interceptors.response,interceptors.error);return function(){// remove all intercepts when done\naxiosConfig.interceptors.request.eject(reqInterceptor);axiosConfig.interceptors.response.eject(resInterceptor);};},[interceptors]);return[counter>0];};export{axiosConfig,useAxiosLoader};","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/config/axiosConfig.js"],"names":["axios","config","useState","useCallback","useMemo","useEffect","axiosConfig","create","baseURL","backendUrl","withCredentials","useAxiosLoader","counter","setCounter","inc","dec","interceptors","request","response","error","Promise","reject","reqInterceptor","use","resInterceptor","eject"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,OAASC,QAAT,CAAmBC,WAAnB,CAAgCC,OAAhC,CAAyCC,SAAzC,KAA0D,OAA1D,CACA;AACA,GAAMC,CAAAA,WAAW,CAAGN,KAAK,CAACO,MAAN,CAAa,CAC/B;AACAC,OAAO,WAAKP,MAAM,CAACQ,UAAZ,QAFwB,CAG/BC,eAAe,CAAE,IAHc,CAAb,CAApB,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACGT,QAAQ,CAAC,CAAD,CADX,wCACpBU,OADoB,eACXC,UADW,eAE3B,GAAMC,CAAAA,GAAG,CAAGX,WAAW,CAAC,iBAAMU,CAAAA,UAAU,CAAC,SAACD,OAAD,QAAaA,CAAAA,OAAO,CAAG,CAAvB,EAAD,CAAhB,EAAD,CAA6C,CAClEC,UADkE,CAA7C,CAAvB,CAEI;AACJ,GAAME,CAAAA,GAAG,CAAGZ,WAAW,CAAC,iBAAMU,CAAAA,UAAU,CAAC,SAACD,OAAD,QAAaA,CAAAA,OAAO,CAAG,CAAvB,EAAD,CAAhB,EAAD,CAA6C,CAClEC,UADkE,CAA7C,CAAvB,CAEI;AAEJ,GAAMG,CAAAA,YAAY,CAAGZ,OAAO,CAC1B,iBAAO,CACLa,OAAO,CAAE,iBAAChB,MAAD,QAAaa,CAAAA,GAAG,GAAIb,MAApB,EADJ,CAELiB,QAAQ,CAAE,kBAACA,SAAD,QAAeH,CAAAA,GAAG,GAAIG,SAAtB,EAFL,CAGLC,KAAK,CAAE,eAACA,MAAD,QAAYJ,CAAAA,GAAG,GAAIK,OAAO,CAACC,MAAR,CAAeF,MAAf,CAAnB,EAHF,CAAP,EAD0B,CAM1B,CAACL,GAAD,CAAMC,GAAN,CAN0B,CAA5B,CAOG;AAEHV,SAAS,CAAC,UAAM,CACd;AACA,GAAMiB,CAAAA,cAAc,CAAGhB,WAAW,CAACU,YAAZ,CAAyBC,OAAzB,CAAiCM,GAAjC,CACrBP,YAAY,CAACC,OADQ,CAErBD,YAAY,CAACG,KAFQ,CAAvB,CAIA;AACA,GAAMK,CAAAA,cAAc,CAAGlB,WAAW,CAACU,YAAZ,CAAyBE,QAAzB,CAAkCK,GAAlC,CACrBP,YAAY,CAACE,QADQ,CAErBF,YAAY,CAACG,KAFQ,CAAvB,CAIA,MAAO,WAAM,CACX;AACAb,WAAW,CAACU,YAAZ,CAAyBC,OAAzB,CAAiCQ,KAAjC,CAAuCH,cAAvC,EACAhB,WAAW,CAACU,YAAZ,CAAyBE,QAAzB,CAAkCO,KAAlC,CAAwCD,cAAxC,EACD,CAJD,CAKD,CAhBQ,CAgBN,CAACR,YAAD,CAhBM,CAAT,CAkBA,MAAO,CAACJ,OAAO,CAAG,CAAX,CAAP,CACD,CArCD,CAuCA,OAASN,WAAT,CAAsBK,cAAtB","sourcesContent":["import axios from 'axios';\nimport config from '../config/env';\nimport { useState, useCallback, useMemo, useEffect } from 'react';\n// Next we make an 'instance' of it\nconst axiosConfig = axios.create({\n  // .. where we make our configurations\n  baseURL: `${config.backendUrl}/api`,\n  withCredentials: true,\n});\n\nconst useAxiosLoader = () => {\n  const [counter, setCounter] = useState(0);\n  const inc = useCallback(() => setCounter((counter) => counter + 1), [\n    setCounter,\n  ]); // add to counter\n  const dec = useCallback(() => setCounter((counter) => counter - 1), [\n    setCounter,\n  ]); // remove from counter\n\n  const interceptors = useMemo(\n    () => ({\n      request: (config) => (inc(), config),\n      response: (response) => (dec(), response),\n      error: (error) => (dec(), Promise.reject(error)),\n    }),\n    [inc, dec]\n  ); // create the interceptors\n\n  useEffect(() => {\n    // add request interceptors\n    const reqInterceptor = axiosConfig.interceptors.request.use(\n      interceptors.request,\n      interceptors.error\n    );\n    // add response interceptors\n    const resInterceptor = axiosConfig.interceptors.response.use(\n      interceptors.response,\n      interceptors.error\n    );\n    return () => {\n      // remove all intercepts when done\n      axiosConfig.interceptors.request.eject(reqInterceptor);\n      axiosConfig.interceptors.response.eject(resInterceptor);\n    };\n  }, [interceptors]);\n\n  return [counter > 0];\n};\n\nexport { axiosConfig, useAxiosLoader };\n"]},"metadata":{},"sourceType":"module"}