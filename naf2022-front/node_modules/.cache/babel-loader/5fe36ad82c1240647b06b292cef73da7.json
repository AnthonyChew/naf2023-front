{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';// defaults to localStorage for web\nimport{composeWithDevTools}from'redux-devtools-extension';import thunk from'redux-thunk';import cartReducer from'./reducers/CartReducer';var persistConfig={key:'root',storage:storage};var persistedReducer=persistReducer(persistConfig,cartReducer);export default(function(){var store=createStore(persistedReducer,composeWithDevTools(applyMiddleware(thunk)));var persistor=persistStore(store);return{store:store,persistor:persistor};});","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/store.js"],"names":["createStore","applyMiddleware","persistStore","persistReducer","storage","composeWithDevTools","thunk","cartReducer","persistConfig","key","persistedReducer","store","persistor"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAAiD;AACjD,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBL,OAAO,CAAPA,OAFoB,CAAtB,CAKA,GAAMM,CAAAA,gBAAgB,CAAGP,cAAc,CAACK,aAAD,CAAgBD,WAAhB,CAAvC,CAEA,eAAe,UAAM,CACnB,GAAII,CAAAA,KAAK,CAAGX,WAAW,CACrBU,gBADqB,CAErBL,mBAAmB,CAACJ,eAAe,CAACK,KAAD,CAAhB,CAFE,CAAvB,CAIA,GAAIM,CAAAA,SAAS,CAAGV,YAAY,CAACS,KAAD,CAA5B,CACA,MAAO,CAAEA,KAAK,CAALA,KAAF,CAASC,SAAS,CAATA,SAAT,CAAP,CACD,CAPD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport cartReducer from './reducers/CartReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, cartReducer);\n\nexport default () => {\n  let store = createStore(\n    persistedReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n"]},"metadata":{},"sourceType":"module"}