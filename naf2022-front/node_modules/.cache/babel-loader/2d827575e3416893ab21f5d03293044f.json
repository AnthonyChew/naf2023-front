{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\HomePage\\\\ImageCard.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { orange } from '@material-ui/core/colors';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    minWidth: 250,\n    height: 300,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    paddingTop: props.imgPaddingTop,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between'\n  }),\n  cardImg: props => ({\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    //'100% 100%',\n    backgroundPosition: 'center',\n    background: props.isGreyedOut ? `linear-gradient( rgba(0, 0, 0, 0.5) 100%, rgba(0, 0, 0, 0.5)100%),${props.cardImg}` : props.cardImg\n  }),\n  pos: {\n    marginBottom: 12\n  },\n  orangeButton: {\n    color: theme.palette.common.white,\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[700]\n    }\n  },\n  whiteText: {\n    color: theme.palette.common.white\n  }\n}));\nexport default function OutlinedCard(props) {\n  const classes = useStyles(props);\n  const history = useHistory();\n\n  const redirect = () => {\n    let path = props.path;\n\n    if (path === 'http://bit.ly/ArtsAlive2021' || path.startsWith(\"http\")) {\n      window.open(path);\n    } else {\n      history.push(path);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: `${classes.root} ${classes.cardImg}`,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.whiteText,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, props.cardTitle), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.whiteText,\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, props.cardDesc)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, props.path && /*#__PURE__*/React.createElement(Button, {\n    className: classes.orangeButton,\n    onClick: redirect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"View\")));\n}","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/HomePage/ImageCard.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Button","Typography","orange","useHistory","useStyles","theme","root","props","minWidth","height","marginLeft","spacing","marginRight","paddingTop","imgPaddingTop","display","flexDirection","justifyContent","cardImg","objectFit","backgroundRepeat","backgroundSize","backgroundPosition","background","isGreyedOut","pos","marginBottom","orangeButton","color","palette","common","white","backgroundColor","whiteText","OutlinedCard","classes","history","redirect","path","startsWith","window","open","push","cardTitle","cardDesc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAGC,KAAD,KAAY;AAChBC,IAAAA,QAAQ,EAAE,GADM;AAEhBC,IAAAA,MAAM,EAAE,GAFQ;AAGhBC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CAHI;AAIhBC,IAAAA,WAAW,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd,CAJG;AAKhBE,IAAAA,UAAU,EAAEN,KAAK,CAACO,aALF;AAMhBC,IAAAA,OAAO,EAAE,MANO;AAOhBC,IAAAA,aAAa,EAAE,QAPC;AAQhBC,IAAAA,cAAc,EAAE;AARA,GAAZ,CADiC;AAWvCC,EAAAA,OAAO,EAAGX,KAAD,KAAY;AACnBY,IAAAA,SAAS,EAAE,OADQ;AAEnBC,IAAAA,gBAAgB,EAAE,WAFC;AAGnBC,IAAAA,cAAc,EAAE,OAHG;AAGM;AACzBC,IAAAA,kBAAkB,EAAE,QAJD;AAKnBC,IAAAA,UAAU,EAAEhB,KAAK,CAACiB,WAAN,GACP,qEAAoEjB,KAAK,CAACW,OAAQ,EAD3E,GAERX,KAAK,CAACW;AAPS,GAAZ,CAX8B;AAoBvCO,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX,GApBkC;AAuBvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEvB,KAAK,CAACwB,OAAN,CAAcC,MAAd,CAAqBC,KADhB;AAEZC,IAAAA,eAAe,EAAE9B,MAAM,CAAC,GAAD,CAFX;AAGZ,eAAW;AACT8B,MAAAA,eAAe,EAAE9B,MAAM,CAAC,GAAD;AADd;AAHC,GAvByB;AA8BvC+B,EAAAA,SAAS,EAAE;AACTL,IAAAA,KAAK,EAAEvB,KAAK,CAACwB,OAAN,CAAcC,MAAd,CAAqBC;AADnB;AA9B4B,CAAZ,CAAD,CAA5B;AAmCA,eAAe,SAASG,YAAT,CAAsB3B,KAAtB,EAA6B;AAC1C,QAAM4B,OAAO,GAAG/B,SAAS,CAACG,KAAD,CAAzB;AAEA,QAAM6B,OAAO,GAAGjC,UAAU,EAA1B;;AAEA,QAAMkC,QAAQ,GAAG,MAAM;AACrB,QAAIC,IAAI,GAAG/B,KAAK,CAAC+B,IAAjB;;AACA,QAAIA,IAAI,KAAK,6BAAT,IAA0CA,IAAI,CAACC,UAAL,CAAgB,MAAhB,CAA9C,EAAuE;AACrEC,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,CAACM,IAAR,CAAaJ,IAAb;AACD;AACF,GAPD;;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,GAAEH,OAAO,CAAC7B,IAAK,IAAG6B,OAAO,CAACjB,OAAQ,EAApD;AAAuD,IAAA,OAAO,EAAC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEiB,OAAO,CAACF,SAA/B;AAA0C,IAAA,OAAO,EAAC,IAAlD;AAAuD,IAAA,SAAS,EAAC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,KAAK,CAACoC,SADT,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAER,OAAO,CAACF,SAA/B;AAA0C,IAAA,OAAO,EAAC,OAAlD;AAA0D,IAAA,SAAS,EAAC,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,KAAK,CAACqC,QADT,CAJF,CADF,eASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrC,KAAK,CAAC+B,IAAN,iBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,OAAO,CAACR,YAA3B;AAAyC,IAAA,OAAO,EAAEU,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CATF,CADF;AAmBD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { orange } from '@material-ui/core/colors';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    minWidth: 250,\n    height: 300,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    paddingTop: props.imgPaddingTop,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  }),\n  cardImg: (props) => ({\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover', //'100% 100%',\n    backgroundPosition: 'center',\n    background: props.isGreyedOut\n      ? `linear-gradient( rgba(0, 0, 0, 0.5) 100%, rgba(0, 0, 0, 0.5)100%),${props.cardImg}`\n      : props.cardImg,\n  }),\n  pos: {\n    marginBottom: 12,\n  },\n  orangeButton: {\n    color: theme.palette.common.white,\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[700],\n    },\n  },\n  whiteText: {\n    color: theme.palette.common.white,\n  },\n}));\n\nexport default function OutlinedCard(props) {\n  const classes = useStyles(props);\n\n  const history = useHistory();\n\n  const redirect = () => {\n    let path = props.path;\n    if (path === 'http://bit.ly/ArtsAlive2021' || path.startsWith(\"http\")) {\n      window.open(path);\n    } else {\n      history.push(path);\n    }  \n  };\n\n  return (\n    <Card className={`${classes.root} ${classes.cardImg}`} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.whiteText} variant=\"h5\" component=\"h2\">\n          {props.cardTitle}\n        </Typography>\n        <Typography className={classes.whiteText} variant=\"body2\" component=\"p\">\n          {props.cardDesc}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        {props.path && (\n          <Button className={classes.orangeButton} onClick={redirect}>\n            View\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}