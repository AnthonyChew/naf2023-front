{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\Authentication\\\\SignUpForm.js\";\nimport React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport vendorService from '../services/vendors';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { trackPromise } from 'react-promise-tracker';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { usePromiseTracker } from 'react-promise-tracker';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  formSection: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst formReducer = (state, event) => {\n  return { ...state,\n    [event.name]: event.value\n  };\n};\n\nexport default function SignUpForm(props) {\n  const classes = useStyles();\n  const [formData, setFormData] = useReducer(formReducer, {\n    showPassword: false\n  });\n  const {\n    switchTabs\n  } = props;\n  const {\n    promiseInProgress\n  } = usePromiseTracker();\n\n  const handleChange = event => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    delete formData['showPassword'];\n\n    for (let key in formData) {\n      if (formData[key] === '') {\n        delete formData[key];\n      }\n    }\n\n    const res = await trackPromise(vendorService.vendorSignUp(formData));\n\n    if (res.status === 200) {\n      alert('Successfully signed up! Please login into your account.');\n      switchTabs(1);\n    } else {\n      // console.log(res.data);\n      if (res.data.validation) {\n        alert(`${res.data.error}: ${JSON.stringify(res.data.validation)}`);\n      } else {\n        alert(`${res.data.error}: This email/username has been used before.`);\n      }\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setFormData({\n      name: 'showPassword',\n      value: !formData.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"username\",\n    label: \"Username\",\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    required: true,\n    value: formData.username,\n    onChange: handleChange,\n    className: classes.formSection,\n    inputProps: {\n      maxLength: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField, classes.formSection),\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    required: true // className={classes.formSection}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"filled-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(FilledInput, {\n    id: \"filled-adornment-password\",\n    name: \"password\",\n    type: formData.showPassword ? 'text' : 'password',\n    value: formData.password,\n    onChange: handleChange,\n    inputProps: {\n      maxLength: 64\n    },\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, formData.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 59\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    name: \"displayName\",\n    label: \"Display Name\",\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    required: true,\n    value: formData.displayName,\n    onChange: handleChange,\n    className: classes.formSection,\n    inputProps: {\n      maxLength: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"emailAddress\",\n    label: \"Email Address\",\n    variant: \"filled\",\n    color: \"secondary\",\n    required: true,\n    fullWidth: true,\n    type: \"email\" //inputProps={{ pattern: '^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$' }} // this pattern would allow some invalid gmails e.g. \"abc\"@gmail.com\n    ,\n    inputProps: {\n      maxLength: 64\n    },\n    value: formData.emailAddress,\n    onChange: handleChange,\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"leadTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Vendor Surcharge\"), /*#__PURE__*/React.createElement(FilledInput, {\n    name: \"surcharge\",\n    value: formData.surcharge,\n    onChange: handleChange,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 27\n      }\n    }, \"$\") // labelWidth={130}\n    ,\n    inputProps: {\n      min: '0',\n      step: '0.01' // pattern: '[0-9]*',\n\n    },\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Vendor Surcharge indicates the extra charges (on top of price) due to delivery/packaging.\")), /*#__PURE__*/React.createElement(TextField, {\n    name: \"description\",\n    label: \"Description\",\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    multiline: true,\n    rows: 2,\n    value: formData.description,\n    onChange: handleChange,\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"contactNumber\",\n    label: \"Contact Number\",\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    type: \"tel\",\n    inputProps: {\n      pattern: '^[0-9]+$',\n      // accepts digits only\n      // maxLength: 15,\n      maxLength: 8,\n      minLength: 8\n    } // max possible length of a phone number including the country code\n    ,\n    value: formData.contactNumber,\n    onChange: handleChange,\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"instagramAccount\",\n    label: \"Instagram Account\",\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    value: formData.instagramAccount,\n    onChange: handleChange,\n    className: classes.formSection,\n    inputProps: {\n      maxLength: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"website\",\n    label: \"Website\",\n    variant: \"filled\",\n    color: \"secondary\",\n    fullWidth: true,\n    type: \"url\",\n    value: formData.website,\n    onChange: handleChange,\n    className: classes.formSection,\n    inputProps: {\n      maxLength: 255\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"secondary\",\n    variant: \"contained\",\n    disabled: promiseInProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(LoadingSpinnerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/Authentication/SignUpForm.js"],"names":["React","useReducer","makeStyles","TextField","Button","clsx","IconButton","FilledInput","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","vendorService","FormHelperText","trackPromise","LoadingSpinnerComponent","usePromiseTracker","useStyles","theme","root","position","overflow","formSection","marginBottom","spacing","formReducer","state","event","name","value","SignUpForm","props","classes","formData","setFormData","showPassword","switchTabs","promiseInProgress","handleChange","target","handleSubmit","preventDefault","key","res","vendorSignUp","status","alert","data","validation","error","JSON","stringify","handleClickShowPassword","handleMouseDownPassword","username","maxLength","margin","textField","password","displayName","emailAddress","surcharge","min","step","description","pattern","minLength","contactNumber","instagramAccount","website"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport vendorService from '../services/vendors';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { trackPromise } from 'react-promise-tracker';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { usePromiseTracker } from 'react-promise-tracker';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  formSection: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst formReducer = (state, event) => {\n  return {\n    ...state,\n    [event.name]: event.value,\n  };\n};\n\nexport default function SignUpForm(props) {\n  const classes = useStyles();\n  const [formData, setFormData] = useReducer(formReducer, {\n    showPassword: false,\n  });\n\n  const { switchTabs } = props;\n  const { promiseInProgress } = usePromiseTracker();\n  const handleChange = (event) => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    delete formData['showPassword'];\n    for (let key in formData) {\n      if (formData[key] === '') {\n        delete formData[key];\n      }\n    }\n    const res = await trackPromise(vendorService.vendorSignUp(formData));\n    if (res.status === 200) {\n      alert('Successfully signed up! Please login into your account.');\n      switchTabs(1);\n    } else {\n      // console.log(res.data);\n      if (res.data.validation) {\n        alert(`${res.data.error}: ${JSON.stringify(res.data.validation)}`);\n      } else {\n        alert(`${res.data.error}: This email/username has been used before.`);\n      }\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setFormData({\n      name: 'showPassword',\n      value: !formData.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit} className={classes.root}>\n      <TextField\n        name=\"username\"\n        label=\"Username\"\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        required\n        value={formData.username}\n        onChange={handleChange}\n        className={classes.formSection}\n        inputProps={{ maxLength: 32 }}\n      />\n      <FormControl\n        className={clsx(classes.margin, classes.textField, classes.formSection)}\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        required\n        // className={classes.formSection}\n      >\n        <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n        <FilledInput\n          id=\"filled-adornment-password\"\n          name=\"password\"\n          type={formData.showPassword ? 'text' : 'password'}\n          value={formData.password}\n          onChange={handleChange}\n          inputProps={{ maxLength: 64 }}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {formData.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        name=\"displayName\"\n        label=\"Display Name\"\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        required\n        value={formData.displayName}\n        onChange={handleChange}\n        className={classes.formSection}\n        inputProps={{ maxLength: 100 }}\n      />\n      <TextField\n        name=\"emailAddress\"\n        label=\"Email Address\"\n        variant=\"filled\"\n        color=\"secondary\"\n        required\n        fullWidth\n        type=\"email\"\n        //inputProps={{ pattern: '^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$' }} // this pattern would allow some invalid gmails e.g. \"abc\"@gmail.com\n        inputProps={{ maxLength: 64 }}\n        value={formData.emailAddress}\n        onChange={handleChange}\n        className={classes.formSection}\n      />\n      <FormControl\n        required\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        className={classes.formSection}\n      >\n        <InputLabel htmlFor=\"leadTime\">Vendor Surcharge</InputLabel>\n        <FilledInput\n          name=\"surcharge\"\n          value={formData.surcharge}\n          onChange={handleChange}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          // labelWidth={130}\n          inputProps={{\n            min: '0',\n            step: '0.01',\n            // pattern: '[0-9]*',\n          }}\n          type=\"number\"\n        />\n        <FormHelperText>\n          Vendor Surcharge indicates the extra charges (on top of price) due to\n          delivery/packaging.\n        </FormHelperText>\n      </FormControl>\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        multiline\n        rows={2}\n        value={formData.description}\n        onChange={handleChange}\n        className={classes.formSection}\n      />\n      <TextField\n        name=\"contactNumber\"\n        label=\"Contact Number\"\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        type=\"tel\"\n        inputProps={{\n          pattern: '^[0-9]+$', // accepts digits only\n          // maxLength: 15,\n          maxLength:8,\n          minLength:8,\n        }} // max possible length of a phone number including the country code\n        value={formData.contactNumber}\n        onChange={handleChange}\n        className={classes.formSection}\n      />\n\n      <TextField\n        name=\"instagramAccount\"\n        label=\"Instagram Account\"\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        value={formData.instagramAccount}\n        onChange={handleChange}\n        className={classes.formSection}\n        inputProps={{ maxLength: 30 }}\n      />\n      <TextField\n        name=\"website\"\n        label=\"Website\"\n        variant=\"filled\"\n        color=\"secondary\"\n        fullWidth\n        type=\"url\"\n        value={formData.website}\n        onChange={handleChange}\n        className={classes.formSection}\n        inputProps={{ maxLength: 255 }}\n      />\n\n      <Button\n        type=\"submit\"\n        color=\"secondary\"\n        variant=\"contained\"\n        disabled={promiseInProgress}\n      >\n        Submit\n      </Button>\n      <LoadingSpinnerComponent />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}