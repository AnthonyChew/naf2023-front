{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\MarketPlacePage\\\\ProductTable.js\";\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography'; // import { useSelector } from 'react-redux';\n\nimport React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport Filter from './Filter';\nimport PropTypes from 'prop-types'; // import clsx from 'clsx';\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Toolbar, Checkbox, IconButton, Tooltip, Paper } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ProductRow from './ProductRow.js';\nimport ConfirmationDialog from '../Components/ConfirmationDialog';\nimport productService from '../services/products';\nimport { useHistory } from 'react-router-dom';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  if (array != null) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n}\n\nconst productHeadCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'Product'\n}, {\n  id: 'inventory',\n  numeric: false,\n  disablePadding: true,\n  label: 'Inventory'\n}, {\n  id: 'sales',\n  numeric: true,\n  disablePadding: true,\n  label: 'Sales Earned ($)'\n}, {\n  id: 'edit',\n  numeric: false,\n  disablePadding: true,\n  label: 'Edit Listing'\n}];\nconst orderHeadCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'Product'\n}, {\n  id: 'quantityBought',\n  numeric: false,\n  disablePadding: true,\n  label: 'Quantity Bought'\n}, {\n  id: 'Price',\n  numeric: true,\n  disablePadding: true,\n  label: 'Price ($)'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    isNested\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, !isNested && /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all products'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), (isNested ? orderHeadCells : productHeadCells).map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: \"center\",\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, headCell.label, orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; //TABLE TOOLBAR (TITLE, SELECT ITEMS, DELETE ITEMS)\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    selected\n  } = props;\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogResult = async continueAction => {\n    setOpen(false);\n\n    if (continueAction) {\n      // console.log(selected);\n      // POST REQUEST TO DELETE SELECTED\n      for (let i = 0; i < selected.length; i++) {\n        let res = await productService.deleteProduct(selected[i]);\n\n        if (res.status !== 200) {\n          if (res.data.error === 'Schema does not match') {\n            alert(res.data.validation.body.message);\n          } else {\n            alert(res.data.error);\n          }\n        }\n      }\n\n      history.go(0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"My Products\")), selected.length > 0 && /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, selected.length, \" selected\"), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  })))), open && /*#__PURE__*/React.createElement(ConfirmationDialog //callback\n  , {\n    title: \"Delete these products?\",\n    content: \"The selected product listings will be deleted permanently.\",\n    parentCallback: handleDialogResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    position: 'relative',\n    textAlign: 'center',\n    margin: 'auto',\n    width: '90vw',\n    overflow: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'auto',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction ProductTable(props) {\n  const classes = useStyles(); // const products = useSelector((state) => state.products);\n\n  const {\n    rows,\n    isNested\n  } = props; // console.log(rows);\n\n  const [filter, setFilter] = useState(false); // array of filters chosen\n\n  const [sort, setSort] = useState(false); //\"A-Z, Recency, Popularity\"\n\n  function setFilters(settingsData) {\n    setFilter(settingsData[0]);\n    setSort(settingsData[1]);\n  } //start table\n\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('name');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(isNested ? 100 : 10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n._id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1; //end\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 5\n    }\n  }, !isNested && /*#__PURE__*/React.createElement(EnhancedTableToolbar, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-labelledby\": \"tableTitle\",\n    \"aria-label\": \"enhanced table\",\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows && rows.length,\n    isNested: isNested,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    id: \"tableBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, rows && stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const itemIdentifier = row._id; //row.name ? row.name : row.productName;\n\n    const isItemSelected = isSelected(itemIdentifier);\n    const labelId = `enhanced-table-checkbox-${index}`;\n\n    if (row.images && row.images.length > 0) {\n      row.imghref = row.images[0];\n    }\n\n    return /*#__PURE__*/React.createElement(ProductRow, {\n      key: index,\n      row: row,\n      isItemSelected: isItemSelected,\n      labelId: labelId,\n      selected: selected,\n      setSelected: setSelected,\n      isNested: isNested,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }\n    });\n  })))), !isNested && /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows && rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default ProductTable;","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/MarketPlacePage/ProductTable.js"],"names":["lighten","makeStyles","Typography","React","useState","SearchBar","Filter","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Checkbox","IconButton","Tooltip","Paper","DeleteIcon","ProductRow","ConfirmationDialog","productService","useHistory","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","productHeadCells","id","numeric","disablePadding","label","orderHeadCells","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","isNested","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","selected","open","setOpen","history","handleClickOpen","handleDialogResult","continueAction","i","length","res","deleteProduct","status","data","error","alert","validation","body","message","go","useStyles","paddingTop","paddingBottom","position","textAlign","margin","width","overflow","border","clip","height","padding","top","ProductTable","rows","filter","setFilter","setSort","setFilters","settingsData","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","_id","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","indexOf","slice","row","itemIdentifier","isItemSelected","labelId","images","imghref"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,cAJF,EAKEC,SALF,EAMEC,eANF,EAOEC,QAPF,EAQEC,cARF,EASEC,OATF,EAUEC,QAVF,EAWEC,UAXF,EAYEC,OAZF,EAaEC,KAbF,QAcO,mBAdP;AAeA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,oBAAT,CAA8BC,CAA9B,EAAiCC,CAAjC,EAAoCC,OAApC,EAA6C;AAC3C,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAC,CAAR;AACD;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8BF,OAA9B,EAAuC;AACrC,SAAOE,KAAK,KAAK,MAAV,GACH,CAACJ,CAAD,EAAIC,CAAJ,KAAUF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAD3B,GAEH,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAFnC;AAGD;;AAED,SAASG,UAAT,CAAoBC,KAApB,EAA2BC,UAA3B,EAAuC;AACrC,MAAID,KAAK,IAAI,IAAb,EAAmB;AACjB,UAAME,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,IAAAA,cAAc,CAACI,IAAf,CAAoB,CAACZ,CAAD,EAAIC,CAAJ,KAAU;AAC5B,YAAMG,KAAK,GAAGG,UAAU,CAACP,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAxB;AACA,UAAIG,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,aAAOJ,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,KAJD;AAKA,WAAOO,cAAc,CAACC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAA7B,CAAP;AACD;AACF;;AAED,MAAMG,gBAAgB,GAAG,CACvB;AACEC,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADuB,EAOvB;AACEH,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPuB,EAavB;AACEH,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,OAAO,EAAE,IAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAbuB,EAmBvB;AACEH,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnBuB,CAAzB;AA2BA,MAAMC,cAAc,GAAG,CACrB;AACEJ,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADqB,EAOrB;AACEH,EAAAA,EAAE,EAAE,gBADN;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPqB,EAarB;AACEH,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,OAAO,EAAE,IAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAbqB,CAAvB;;AAqBA,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,gBAFI;AAGJlB,IAAAA,KAHI;AAIJF,IAAAA,OAJI;AAKJqB,IAAAA,WALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,aAPI;AAQJC,IAAAA;AARI,MASFN,KATJ;;AAUA,QAAMO,iBAAiB,GAAIC,QAAD,IAAeC,KAAD,IAAW;AACjDJ,IAAAA,aAAa,CAACI,KAAD,EAAQD,QAAR,CAAb;AACD,GAFD;;AAIA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,QAAD,iBACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAEH,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGC,QADlD;AAEE,IAAA,OAAO,EAAEA,QAAQ,GAAG,CAAX,IAAgBD,WAAW,KAAKC,QAF3C;AAGE,IAAA,QAAQ,EAAEF,gBAHZ;AAIE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,eAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYG,CAACI,QAAQ,GAAGR,cAAH,GAAoBL,gBAA7B,EAA+CJ,GAA/C,CAAoDqB,QAAD,iBAClD,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAAChB,EADhB;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,OAAO,EAAEgB,QAAQ,CAACd,cAAT,GAA0B,MAA1B,GAAmC,SAH9C;AAIE,IAAA,aAAa,EAAEd,OAAO,KAAK4B,QAAQ,CAAChB,EAArB,GAA0BV,KAA1B,GAAkC,KAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,cAAD;AACE,IAAA,MAAM,EAAEF,OAAO,KAAK4B,QAAQ,CAAChB,EAD/B;AAEE,IAAA,SAAS,EAAEZ,OAAO,KAAK4B,QAAQ,CAAChB,EAArB,GAA0BV,KAA1B,GAAkC,KAF/C;AAGE,IAAA,OAAO,EAAEuB,iBAAiB,CAACG,QAAQ,CAAChB,EAAV,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGgB,QAAQ,CAACb,KALZ,EAMGf,OAAO,KAAK4B,QAAQ,CAAChB,EAArB,gBACC;AAAM,IAAA,SAAS,EAAEO,OAAO,CAACU,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,KAAK,KAAK,MAAV,GAAmB,mBAAnB,GAAyC,kBAD5C,CADD,GAIG,IAVN,CANF,CADD,CAZH,CADF,CADF;AAsCD;;AAEDe,iBAAiB,CAACa,SAAlB,GAA8B;AAC5BX,EAAAA,OAAO,EAAEzC,SAAS,CAACqD,MAAV,CAAiBC,UADE;AAE5BX,EAAAA,WAAW,EAAE3C,SAAS,CAACuD,MAAV,CAAiBD,UAFF;AAG5BT,EAAAA,aAAa,EAAE7C,SAAS,CAACwD,IAAV,CAAeF,UAHF;AAI5BZ,EAAAA,gBAAgB,EAAE1C,SAAS,CAACwD,IAAV,CAAeF,UAJL;AAK5B9B,EAAAA,KAAK,EAAExB,SAAS,CAACyD,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,EAAiCH,UALZ;AAM5BhC,EAAAA,OAAO,EAAEtB,SAAS,CAAC0D,MAAV,CAAiBJ,UANE;AAO5BV,EAAAA,QAAQ,EAAE5C,SAAS,CAACuD,MAAV,CAAiBD;AAPC,CAA9B,C,CAUA;;AACA,MAAMK,gBAAgB,GAAGjE,UAAU,CAAEkE,KAAD,KAAY;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEJC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFV,GADwC;AAK9CE,EAAAA,SAAS,EACPL,KAAK,CAACM,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACI;AACEC,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBC,IADjC;AAEEC,IAAAA,eAAe,EAAE9E,OAAO,CAACmE,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBG,KAAzB,EAAgC,IAAhC;AAF1B,GADJ,GAKI;AACEJ,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcO,IAAd,CAAmBC,OAD5B;AAEEH,IAAAA,eAAe,EAAEX,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBM;AAF3C,GAXwC;AAe9CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD;AAfuC,CAAZ,CAAD,CAAnC;;AAoBA,MAAMC,oBAAoB,GAAItC,KAAD,IAAW;AACtC,QAAMC,OAAO,GAAGkB,gBAAgB,EAAhC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAevC,KAArB;AACA,QAAM,CAACwC,IAAD,EAAOC,OAAP,IAAkBpF,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMqF,OAAO,GAAGhE,UAAU,EAA1B;;AAEA,QAAMiE,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAMG,kBAAkB,GAAG,MAAOC,cAAP,IAA0B;AACnDJ,IAAAA,OAAO,CAAC,KAAD,CAAP;;AAEA,QAAII,cAAJ,EAAoB;AAClB;AACA;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACQ,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAIE,GAAG,GAAG,MAAMvE,cAAc,CAACwE,aAAf,CAA6BV,QAAQ,CAACO,CAAD,CAArC,CAAhB;;AACA,YAAIE,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,cAAIF,GAAG,CAACG,IAAJ,CAASC,KAAT,KAAmB,uBAAvB,EAAgD;AAC9CC,YAAAA,KAAK,CAACL,GAAG,CAACG,IAAJ,CAASG,UAAT,CAAoBC,IAApB,CAAyBC,OAA1B,CAAL;AACD,WAFD,MAEO;AACLH,YAAAA,KAAK,CAACL,GAAG,CAACG,IAAJ,CAASC,KAAV,CAAL;AACD;AACF;AACF;;AAEDV,MAAAA,OAAO,CAACe,EAAR,CAAW,CAAX;AACD;AACF,GAnBD;;AAqBA,sBACE,uDACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAExD,OAAO,CAACmC,KADrB;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,SAAS,EAAC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAWGG,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,iBACC,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE9C,OAAO,CAACwB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAExB,OAAO,CAACmC,KADrB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,SAAS,EAAC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGG,QAAQ,CAACQ,MANZ,cADF,eASE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,kBAAW,QAAvB;AAAgC,IAAA,OAAO,EAAEJ,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,CAZJ,EA4BGH,IAAI,iBACH,oBAAC,kBAAD,CACE;AADF;AAEE,IAAA,KAAK,EAAC,wBAFR;AAGE,IAAA,OAAO,EAAC,4DAHV;AAIE,IAAA,cAAc,EAAEI,kBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADF;AAuCD,CArED;;AAuEAN,oBAAoB,CAAC1B,SAArB,GAAiC;AAC/BT,EAAAA,WAAW,EAAE3C,SAAS,CAACuD,MAAV,CAAiBD;AADC,CAAjC;AAIA,MAAM4C,SAAS,GAAGxG,UAAU,CAAEkE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJsC,IAAAA,UAAU,EAAEvC,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEJqC,IAAAA,aAAa,EAAExC,KAAK,CAACG,OAAN,CAAc,CAAd,CAFX;AAGJsC,IAAAA,QAAQ,EAAE,UAHN;AAIJC,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,MAAM,EAAE,MALJ;AAMJC,IAAAA,KAAK,EAAE,MANH;AAOJC,IAAAA,QAAQ,EAAE;AAPN,GADiC;AAUvCtD,EAAAA,cAAc,EAAE;AACduD,IAAAA,MAAM,EAAE,CADM;AAEdC,IAAAA,IAAI,EAAE,eAFQ;AAGdC,IAAAA,MAAM,EAAE,CAHM;AAIdL,IAAAA,MAAM,EAAE,CAAC,CAJK;AAKdE,IAAAA,QAAQ,EAAE,MALI;AAMdI,IAAAA,OAAO,EAAE,CANK;AAOdR,IAAAA,QAAQ,EAAE,UAPI;AAQdS,IAAAA,GAAG,EAAE,EARS;AASdN,IAAAA,KAAK,EAAE;AATO;AAVuB,CAAZ,CAAD,CAA5B;;AAuBA,SAASO,YAAT,CAAsBvE,KAAtB,EAA6B;AAC3B,QAAMC,OAAO,GAAGyD,SAAS,EAAzB,CAD2B,CAE3B;;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQlE,IAAAA;AAAR,MAAqBN,KAA3B,CAH2B,CAK3B;;AAEA,QAAM,CAACyE,MAAD,EAASC,SAAT,IAAsBrH,QAAQ,CAAC,KAAD,CAApC,CAP2B,CAOkB;;AAC7C,QAAM,CAACmC,IAAD,EAAOmF,OAAP,IAAkBtH,QAAQ,CAAC,KAAD,CAAhC,CAR2B,CAQc;;AAEzC,WAASuH,UAAT,CAAoBC,YAApB,EAAkC;AAChCH,IAAAA,SAAS,CAACG,YAAY,CAAC,CAAD,CAAb,CAAT;AACAF,IAAAA,OAAO,CAACE,YAAY,CAAC,CAAD,CAAb,CAAP;AACD,GAb0B,CAe3B;;;AACA,QAAM,CAAC7F,KAAD,EAAQ8F,QAAR,IAAoBzH,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACyB,OAAD,EAAUiG,UAAV,IAAwB1H,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACkF,QAAD,EAAWyC,WAAX,IAA0B3H,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4H,IAAD,EAAOC,OAAP,IAAkB7H,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAAC8H,WAAD,EAAcC,cAAd,IAAgC/H,QAAQ,CAACiD,QAAQ,GAAG,GAAH,GAAS,EAAlB,CAA9C;;AAEA,QAAM+E,iBAAiB,GAAG,CAAC5E,KAAD,EAAQD,QAAR,KAAqB;AAC7C,UAAM8E,KAAK,GAAGxG,OAAO,KAAK0B,QAAZ,IAAwBxB,KAAK,KAAK,KAAhD;AACA8F,IAAAA,QAAQ,CAACQ,KAAK,GAAG,MAAH,GAAY,KAAlB,CAAR;AACAP,IAAAA,UAAU,CAACvE,QAAD,CAAV;AACD,GAJD;;AAMA,QAAM+E,oBAAoB,GAAI9E,KAAD,IAAW;AACtC,QAAIA,KAAK,CAAC+E,MAAN,CAAaC,OAAjB,EAA0B;AACxB,YAAMC,YAAY,GAAGlB,IAAI,CAACnF,GAAL,CAAUsG,CAAD,IAAOA,CAAC,CAACC,GAAlB,CAArB;AACAZ,MAAAA,WAAW,CAACU,YAAD,CAAX;AACA;AACD;;AACDV,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAPD;;AASA,QAAMa,gBAAgB,GAAG,CAACpF,KAAD,EAAQqF,OAAR,KAAoB;AAC3CZ,IAAAA,OAAO,CAACY,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAItF,KAAD,IAAW;AACzC2E,IAAAA,cAAc,CAACY,QAAQ,CAACvF,KAAK,CAAC+E,MAAN,CAAaS,KAAd,EAAqB,EAArB,CAAT,CAAd;AACAf,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMgB,UAAU,GAAIxG,EAAD,IAAQ6C,QAAQ,CAAC4D,OAAT,CAAiBzG,EAAjB,MAAyB,CAAC,CAArD,CA9C2B,CAgD3B;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACoB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,CAACf,QAAD,iBAAa,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAEiC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,eAIE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,uBAAgB,YADlB;AAEE,kBAAW,gBAFb;AAGE,IAAA,KAAK,EAAE;AAAEsB,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,iBAAD;AACE,IAAA,OAAO,EAAE5D,OADX;AAEE,IAAA,WAAW,EAAEsC,QAAQ,CAACQ,MAFxB;AAGE,IAAA,KAAK,EAAE/D,KAHT;AAIE,IAAA,OAAO,EAAEF,OAJX;AAKE,IAAA,gBAAgB,EAAEyG,oBALpB;AAME,IAAA,aAAa,EAAEF,iBANjB;AAOE,IAAA,QAAQ,EAAEb,IAAI,IAAIA,IAAI,CAACzB,MAPzB;AAQE,IAAA,QAAQ,EAAEzC,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAeE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkE,IAAI,IACHvF,UAAU,CAACuF,IAAD,EAAOzF,aAAa,CAACC,KAAD,EAAQF,OAAR,CAApB,CAAV,CACGsH,KADH,CACSnB,IAAI,GAAGE,WADhB,EAC6BF,IAAI,GAAGE,WAAP,GAAqBA,WADlD,EAEG9F,GAFH,CAEO,CAACgH,GAAD,EAAM9G,KAAN,KAAgB;AACnB,UAAM+G,cAAc,GAAGD,GAAG,CAACT,GAA3B,CADmB,CACa;;AAChC,UAAMW,cAAc,GAAGL,UAAU,CAACI,cAAD,CAAjC;AACA,UAAME,OAAO,GAAI,2BAA0BjH,KAAM,EAAjD;;AACA,QAAI8G,GAAG,CAACI,MAAJ,IAAcJ,GAAG,CAACI,MAAJ,CAAW1D,MAAX,GAAoB,CAAtC,EAAyC;AACvCsD,MAAAA,GAAG,CAACK,OAAJ,GAAcL,GAAG,CAACI,MAAJ,CAAW,CAAX,CAAd;AACD;;AACD,wBACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAElH,KADP;AAEE,MAAA,GAAG,EAAE8G,GAFP;AAGE,MAAA,cAAc,EAAEE,cAHlB;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,QAAQ,EAAEjE,QALZ;AAME,MAAA,WAAW,EAAEyC,WANf;AAOE,MAAA,QAAQ,EAAE1E,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GApBH,CAFJ,CAfF,CADF,CAJF,EA8CG,CAACA,QAAD,iBACC,oBAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAEkE,IAAI,IAAIA,IAAI,CAACzB,MAHtB;AAIE,IAAA,WAAW,EAAEoC,WAJf;AAKE,IAAA,IAAI,EAAEF,IALR;AAME,IAAA,YAAY,EAAEY,gBANhB;AAOE,IAAA,mBAAmB,EAAEE,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,CADF;AA6DD;;AAED,eAAexB,YAAf","sourcesContent":["import { lighten, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import { useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport Filter from './Filter';\nimport PropTypes from 'prop-types';\n// import clsx from 'clsx';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  Paper,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ProductRow from './ProductRow.js';\nimport ConfirmationDialog from '../Components/ConfirmationDialog';\nimport productService from '../services/products';\nimport { useHistory } from 'react-router-dom';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  if (array != null) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n}\n\nconst productHeadCells = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Product',\n  },\n  {\n    id: 'inventory',\n    numeric: false,\n    disablePadding: true,\n    label: 'Inventory',\n  },\n  {\n    id: 'sales',\n    numeric: true,\n    disablePadding: true,\n    label: 'Sales Earned ($)',\n  },\n  {\n    id: 'edit',\n    numeric: false,\n    disablePadding: true,\n    label: 'Edit Listing',\n  },\n];\n\nconst orderHeadCells = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Product',\n  },\n  {\n    id: 'quantityBought',\n    numeric: false,\n    disablePadding: true,\n    label: 'Quantity Bought',\n  },\n  {\n    id: 'Price',\n    numeric: true,\n    disablePadding: true,\n    label: 'Price ($)',\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    isNested,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {!isNested && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all products' }}\n            />\n          </TableCell>\n        )}\n        <TableCell />\n        {(isNested ? orderHeadCells : productHeadCells).map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\n//TABLE TOOLBAR (TITLE, SELECT ITEMS, DELETE ITEMS)\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { selected } = props;\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleDialogResult = async (continueAction) => {\n    setOpen(false);\n\n    if (continueAction) {\n      // console.log(selected);\n      // POST REQUEST TO DELETE SELECTED\n      for (let i = 0; i < selected.length; i++) {\n        let res = await productService.deleteProduct(selected[i]);\n        if (res.status !== 200) {\n          if (res.data.error === 'Schema does not match') {\n            alert(res.data.validation.body.message);\n          } else {\n            alert(res.data.error);\n          }\n        }\n      }\n\n      history.go(0);\n    }\n  };\n\n  return (\n    <>\n      <Toolbar>\n        <Typography\n          className={classes.title}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          My Products\n        </Typography>\n      </Toolbar>\n      {selected.length > 0 && (\n        <Toolbar className={classes.highlight}>\n          <Typography\n            className={classes.title}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {selected.length} selected\n          </Typography>\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\" onClick={handleClickOpen}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      )}\n      {open && (\n        <ConfirmationDialog\n          //callback\n          title=\"Delete these products?\"\n          content=\"The selected product listings will be deleted permanently.\"\n          parentCallback={handleDialogResult}\n        />\n      )}\n    </>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    position: 'relative',\n    textAlign: 'center',\n    margin: 'auto',\n    width: '90vw',\n    overflow: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'auto',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction ProductTable(props) {\n  const classes = useStyles();\n  // const products = useSelector((state) => state.products);\n  const { rows, isNested } = props;\n\n  // console.log(rows);\n\n  const [filter, setFilter] = useState(false); // array of filters chosen\n  const [sort, setSort] = useState(false); //\"A-Z, Recency, Popularity\"\n\n  function setFilters(settingsData) {\n    setFilter(settingsData[0]);\n    setSort(settingsData[1]);\n  }\n\n  //start table\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('name');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(isNested ? 100 : 10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n._id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  //end\n\n  return (\n    <div className={classes.root}>\n      {/* <Paper className={classes.paper}> */}\n      {!isNested && <EnhancedTableToolbar selected={selected} />}\n\n      <TableContainer>\n        <Table\n          aria-labelledby=\"tableTitle\"\n          aria-label=\"enhanced table\"\n          style={{ position: 'relative' }}\n        >\n          <EnhancedTableHead\n            classes={classes}\n            numSelected={selected.length}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={rows && rows.length}\n            isNested={isNested}\n          />\n          <TableBody id=\"tableBody\">\n            {rows &&\n              stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const itemIdentifier = row._id; //row.name ? row.name : row.productName;\n                  const isItemSelected = isSelected(itemIdentifier);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  if (row.images && row.images.length > 0) {\n                    row.imghref = row.images[0];\n                  }\n                  return (\n                    <ProductRow\n                      key={index}\n                      row={row}\n                      isItemSelected={isItemSelected}\n                      labelId={labelId}\n                      selected={selected}\n                      setSelected={setSelected}\n                      isNested={isNested}\n                    />\n                  );\n                })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {!isNested && (\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows && rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      )}\n      {/* </Paper> */}\n    </div>\n  );\n}\n\nexport default ProductTable;\n"]},"metadata":{},"sourceType":"module"}