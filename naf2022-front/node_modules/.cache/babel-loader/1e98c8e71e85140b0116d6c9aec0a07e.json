{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\Authentication\\\\LoginForm.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport authService from '../services/auth';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { trackPromise } from 'react-promise-tracker';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { usePromiseTracker } from 'react-promise-tracker';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  formSection: {\n    marginBottom: theme.spacing(3)\n  }\n}));\nexport default function LoginForm(props) {\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    showPassword: false\n  });\n  const {\n    user\n  } = props;\n  const history = useHistory();\n  const {\n    promiseInProgress\n  } = usePromiseTracker();\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const logIn = async event => {\n    event.preventDefault();\n    let res = null;\n\n    if (user === 'vendor') {\n      res = await trackPromise(authService.vendorLogin(values.username, values.password));\n    } else if (user === 'admin') {\n      res = await trackPromise(authService.adminLogin(values.username, values.password));\n    }\n\n    if (res.status === 200) {\n      history.go(0);\n    } else {\n      alert(JSON.stringify(res.data.errors));\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: logIn,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter your username/email\",\n    id: \"username\",\n    variant: \"filled\",\n    fullWidth: true,\n    onChange: handleChange('username'),\n    className: classes.formSection,\n    color: \"secondary\",\n    inputProps: {\n      maxLength: 64\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: clsx(classes.formSection),\n    variant: \"filled\",\n    fullWidth: true,\n    color: \"secondary\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Enter your password\"), /*#__PURE__*/React.createElement(FilledInput, {\n    id: \"password\",\n    type: values.showPassword ? 'text' : 'password',\n    value: values.password,\n    onChange: handleChange('password'),\n    inputProps: {\n      maxLength: 64\n    },\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 57\n      }\n    }))),\n    labelWidth: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"secondary\",\n    disabled: promiseInProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(LoadingSpinnerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/Authentication/LoginForm.js"],"names":["React","useState","makeStyles","TextField","Visibility","VisibilityOff","FormControl","InputLabel","InputAdornment","FilledInput","IconButton","Button","authService","useHistory","clsx","trackPromise","LoadingSpinnerComponent","usePromiseTracker","useStyles","theme","root","position","overflow","formSection","marginBottom","spacing","LoginForm","props","values","setValues","username","password","showPassword","user","history","promiseInProgress","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","logIn","res","vendorLogin","adminLogin","status","go","alert","JSON","stringify","data","errors","classes","maxLength"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport authService from '../services/auth';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { trackPromise } from 'react-promise-tracker';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { usePromiseTracker } from 'react-promise-tracker';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  formSection: {\n    marginBottom: theme.spacing(3),\n  },\n}));\nexport default function LoginForm(props) {\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    showPassword: false,\n  });\n  const { user } = props;\n  const history = useHistory();\n  const { promiseInProgress } = usePromiseTracker();\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const logIn = async (event) => {\n    event.preventDefault();\n    let res = null;\n    if (user === 'vendor') {\n      res = await trackPromise(\n        authService.vendorLogin(values.username, values.password)\n      );\n    } else if (user === 'admin') {\n      res = await trackPromise(\n        authService.adminLogin(values.username, values.password)\n      );\n    }\n    if (res.status === 200) {\n      history.go(0);\n    } else {\n      alert(JSON.stringify(res.data.errors));\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <form autoComplete=\"off\" onSubmit={logIn} className={classes.root}>\n      <TextField\n        label=\"Enter your username/email\"\n        id=\"username\"\n        variant=\"filled\"\n        fullWidth\n        onChange={handleChange('username')}\n        className={classes.formSection}\n        color=\"secondary\"\n        inputProps={{ maxLength: 64 }}\n        required\n      />\n      <FormControl\n        className={clsx(classes.formSection)}\n        variant=\"filled\"\n        fullWidth\n        color=\"secondary\"\n        required\n      >\n        <InputLabel>Enter your password</InputLabel>\n        <FilledInput\n          id=\"password\"\n          type={values.showPassword ? 'text' : 'password'}\n          value={values.password}\n          onChange={handleChange('password')}\n          inputProps={{ maxLength: 64 }}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          labelWidth={70}\n        />\n      </FormControl>\n      <Button\n        variant=\"contained\"\n        type=\"submit\"\n        color=\"secondary\"\n        disabled={promiseInProgress}\n      >\n        Log in\n      </Button>\n      <LoadingSpinnerComponent />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}