{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\AdminInterface\\\\VerifyWorkshops.js\";\nimport React, { useState } from 'react';\nimport { IconButton, InputLabel, FormControl, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Select, Paper } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport adminService from '../services/admin';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { trackPromise } from 'react-promise-tracker';\nimport { usePromiseTracker } from 'react-promise-tracker'; // import { useHistory } from 'react-router-dom';\n\nexport default function VerifyWorkshops(props) {\n  //   const history = useHistory();\n  const {\n    workshops,\n    handleNotAuth\n  } = props;\n  const [workshopVerify, setWorkshopVerify] = useState(null);\n\n  const verifyWorkshop = async studentId => {\n    const res = await trackPromise(adminService.verifyWorkshop(studentId, workshopVerify.name)); // console.log(auth);\n\n    if (res.status === 401) {\n      handleNotAuth(false);\n    } else if (res.status === 400) {\n      alert(res.data.error);\n    }\n  };\n\n  const handleChange = event => {\n    const workshop = workshops.find(workshop => workshop.name === event.target.value);\n    setWorkshopVerify(workshop);\n  };\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoadingSpinnerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Workshop\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: workshopVerify && workshopVerify.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), workshops && workshops.map(workshop => /*#__PURE__*/React.createElement(\"option\", {\n    key: workshop._id,\n    value: workshop.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, workshop.name)))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Email Address\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, workshopVerify && workshopVerify.registeredParticipants && workshopVerify.registeredParticipants.map((participant, index) => {\n    if (participant.studentPoints.length > 0) {\n      const points = participant.studentPoints[0];\n      let pointCategory = null;\n\n      if (points.length > 0) {\n        pointCategory = points.find(point => point.category === workshopVerify.name);\n      }\n\n      if (!pointCategory) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }\n        }, participant.name), /*#__PURE__*/React.createElement(TableCell, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }\n        }, participant.emailAddress), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"download\",\n          disabled: promiseInProgress,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(DoneIcon, {\n          onClick: () => verifyWorkshop(participant.studentId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 35\n          }\n        })))));\n      }\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/AdminInterface/VerifyWorkshops.js"],"names":["React","useState","IconButton","InputLabel","FormControl","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Select","Paper","DoneIcon","adminService","LoadingSpinnerComponent","trackPromise","usePromiseTracker","VerifyWorkshops","props","workshops","handleNotAuth","workshopVerify","setWorkshopVerify","verifyWorkshop","studentId","res","name","status","alert","data","error","handleChange","event","workshop","find","target","value","promiseInProgress","map","_id","registeredParticipants","participant","index","studentPoints","length","points","pointCategory","point","category","emailAddress"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  IconButton,\n  InputLabel,\n  FormControl,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Select,\n  Paper,\n} from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport adminService from '../services/admin';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { trackPromise } from 'react-promise-tracker';\nimport { usePromiseTracker } from 'react-promise-tracker';\n// import { useHistory } from 'react-router-dom';\n\nexport default function VerifyWorkshops(props) {\n  //   const history = useHistory();\n  const { workshops, handleNotAuth } = props;\n  const [workshopVerify, setWorkshopVerify] = useState(null);\n\n  const verifyWorkshop = async (studentId) => {\n    const res = await trackPromise(\n      adminService.verifyWorkshop(studentId, workshopVerify.name)\n    );\n    // console.log(auth);\n    if (res.status === 401) {\n      handleNotAuth(false);\n    } else if (res.status === 400) {\n      alert(res.data.error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const workshop = workshops.find(\n      (workshop) => workshop.name === event.target.value\n    );\n    setWorkshopVerify(workshop);\n  };\n\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    <>\n      <LoadingSpinnerComponent />\n      <FormControl>\n        <InputLabel>Workshop</InputLabel>\n        <Select\n          native\n          value={workshopVerify && workshopVerify.name}\n          onChange={handleChange}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {workshops &&\n            workshops.map((workshop) => (\n              <option key={workshop._id} value={workshop.name}>\n                {workshop.name}\n              </option>\n            ))}\n        </Select>\n      </FormControl>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Email Address</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {workshopVerify &&\n              workshopVerify.registeredParticipants &&\n              workshopVerify.registeredParticipants.map(\n                (participant, index) => {\n                  if (participant.studentPoints.length > 0) {\n                    const points = participant.studentPoints[0];\n                    let pointCategory = null;\n                    if (points.length > 0) {\n                      pointCategory = points.find(\n                        (point) => point.category === workshopVerify.name\n                      );\n                    }\n                    if (!pointCategory) {\n                      return (\n                        <>\n                          <TableRow key={index}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {participant.name}\n                            </TableCell>\n                            <TableCell>{participant.emailAddress}</TableCell>\n                            {\n                              <>\n                                <IconButton\n                                  edge=\"end\"\n                                  aria-label=\"download\"\n                                  disabled={promiseInProgress}\n                                >\n                                  <DoneIcon\n                                    onClick={() =>\n                                      verifyWorkshop(participant.studentId)\n                                    }\n                                  />\n                                </IconButton>\n                              </>\n                            }\n                          </TableRow>\n                        </>\n                      );\n                    }\n                  }\n                }\n              )}\n            {/* {workshopVerify &&\n              workshopVerify.waitlistedParticipants &&\n              workshopVerify.waitlistedParticipants.map(\n                (participant, index) => {\n                  if (participant.studentPoints.length > 0) {\n                    const points = participant.studentPoints[0];\n                    let pointCategory = null;\n                    if (points.length > 0) {\n                      pointCategory = points.find(\n                        (point) => point.category === workshopVerify.name\n                      );\n                    }\n                    if (!pointCategory) {\n                      return (\n                        <>\n                          <TableRow key={index}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {participant.name}\n                            </TableCell>\n                            <TableCell>{participant.emailAddress}</TableCell>\n                            {\n                              <>\n                                <IconButton\n                                  edge=\"end\"\n                                  aria-label=\"download\"\n                                  disabled={promiseInProgress}\n                                >\n                                  <DoneIcon\n                                    onClick={() =>\n                                      verifyWorkshop(participant.studentId)\n                                    }\n                                  />\n                                </IconButton>\n                              </>\n                            }\n                          </TableRow>\n                        </>\n                      );\n                    }\n                  }\n                }\n              )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}