{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\Components\\\\MenuButton.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  }\n}));\nexport default function MenuButton(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  const listItems = props.items.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    component: Link,\n    to: item.route,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 47\n    }\n  }, item.text));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ref: anchorRef,\n    \"aria-controls\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, props.name), /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    placement: \"bottom-start\",\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    autoFocusItem: open,\n    id: \"menu-list-grow\",\n    onKeyDown: handleListKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, listItems)))))));\n}","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/Components/MenuButton.js"],"names":["React","Button","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","makeStyles","Link","useStyles","theme","root","display","paper","marginRight","spacing","MenuButton","props","classes","open","setOpen","useState","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","listItems","items","map","item","route","text","undefined","name","TransitionProps","placement","transformOrigin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Link,\n} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function MenuButton(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  const listItems = props.items.map((item) => <MenuItem component={Link} to={item.route}>{item.text}</MenuItem>);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >\n          {props.name}\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} placement=\"bottom-start\" role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    {listItems}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}