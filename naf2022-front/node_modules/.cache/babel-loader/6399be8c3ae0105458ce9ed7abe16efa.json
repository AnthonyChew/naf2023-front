{"ast":null,"code":"import config from '../config/env';\nimport { axiosConfig } from '../config/axiosConfig';\nconst baseUrl = config.endpoints.photos;\n\nconst downloadPhotos = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/download`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst votePhoto = async photos => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/vote/`,\n      data: photos\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst submitPhoto = async newPhoto => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/`,\n      data: newPhoto\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst getShortlistedNTUPhotos = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/shortlisted-ntu`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst getShortlistedOpenPhotos = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/shortlisted-open`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport default {\n  downloadPhotos,\n  submitPhoto,\n  votePhoto,\n  getShortlistedNTUPhotos,\n  getShortlistedOpenPhotos\n};","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/services/photog.js"],"names":["config","axiosConfig","baseUrl","endpoints","photos","downloadPhotos","res","method","url","err","response","votePhoto","data","submitPhoto","newPhoto","getShortlistedNTUPhotos","getShortlistedOpenPhotos"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,MAAMC,OAAO,GAAGF,MAAM,CAACG,SAAP,CAAiBC,MAAjC;;AAEA,MAAMC,cAAc,GAAG,YAAY;AACjC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,WAAW,CAAC;AAC5BM,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ;AAFY,KAAD,CAA7B;AAIA,WAAOI,GAAP;AACD,GAND,CAME,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAYA,MAAMC,SAAS,GAAG,MAAOP,MAAP,IAAkB;AAClC,MAAI;AACF,UAAME,GAAG,GAAG,MAAML,WAAW,CAAC;AAC5BM,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,QAFY;AAG5BU,MAAAA,IAAI,EAAER;AAHsB,KAAD,CAA7B;AAKA,WAAOE,GAAP;AACD,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAXD;;AAaA,MAAMG,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,MAAI;AACF,UAAMR,GAAG,GAAG,MAAML,WAAW,CAAC;AAC5BM,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,GAFY;AAG5BU,MAAAA,IAAI,EAAEE;AAHsB,KAAD,CAA7B;AAKA,WAAOR,GAAP;AACD,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAXD;;AAaA,MAAMK,uBAAuB,GAAG,YAAY;AAC1C,MAAI;AACF,UAAMT,GAAG,GAAG,MAAML,WAAW,CAAC;AAC5BM,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ;AAFY,KAAD,CAA7B;AAIA,WAAOI,GAAP;AACD,GAND,CAME,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAYA,MAAMM,wBAAwB,GAAG,YAAY;AAC3C,MAAI;AACF,UAAMV,GAAG,GAAG,MAAML,WAAW,CAAC;AAC5BM,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ;AAFY,KAAD,CAA7B;AAIA,WAAOI,GAAP;AACD,GAND,CAME,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAYA,eAAe;AACbL,EAAAA,cADa;AAEbQ,EAAAA,WAFa;AAGbF,EAAAA,SAHa;AAIbI,EAAAA,uBAJa;AAKbC,EAAAA;AALa,CAAf","sourcesContent":["import config from '../config/env';\nimport { axiosConfig } from '../config/axiosConfig';\nconst baseUrl = config.endpoints.photos;\n\nconst downloadPhotos = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/download`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst votePhoto = async (photos) => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/vote/`,\n      data: photos,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst submitPhoto = async (newPhoto) => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/`,\n      data: newPhoto,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst getShortlistedNTUPhotos = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/shortlisted-ntu`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst getShortlistedOpenPhotos = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/shortlisted-open`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport default {\n  downloadPhotos,\n  submitPhoto,\n  votePhoto,\n  getShortlistedNTUPhotos,\n  getShortlistedOpenPhotos,\n};\n"]},"metadata":{},"sourceType":"module"}