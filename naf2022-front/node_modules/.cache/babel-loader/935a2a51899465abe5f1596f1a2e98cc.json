{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\MarketPlacePage\\\\AddProduct.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ChipInput from 'material-ui-chip-input';\nimport productService from '../services/products';\nimport { useDropzone } from 'react-dropzone';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport { useHistory } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { trackPromise } from 'react-promise-tracker';\nimport { usePromiseTracker } from 'react-promise-tracker';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  formSection: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'block'\n  },\n  indentedCheckboxes: {\n    marginLeft: theme.spacing(2)\n  },\n  secondaryInput: {\n    marginLeft: theme.spacing(3),\n    marginBottom: theme.spacing(2)\n  },\n  rowLabels: {\n    align: 'center'\n  },\n  //IMAGE DROPZONE STYLING\n  dropzone: {\n    // backgroundColor: 'pink',\n    border: '3px dashed rgba(179, 86, 153, 0.6)',\n    color: 'rgba(179, 86, 153, 1)',\n    padding: theme.spacing(5),\n    marginTop: theme.spacing(2),\n    margin: 'auto',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    },\n    '&:focus': {\n      outline: 'none'\n    }\n  },\n  thumbsContainer: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16,\n    justifyContent: 'center'\n  },\n  thumb: {\n    display: 'inline-flex',\n    position: 'relative',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    padding: 5\n  },\n  thumbInner: {\n    //   minWidth: 0,\n    //   overflow: 'hidden',\n    height: 150\n  },\n  img: {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  },\n  [theme.breakpoints.down('xs')]: {\n    thumbInner: {\n      height: 'auto'\n    },\n    img: {\n      width: '100%',\n      objectFit: 'cover'\n    }\n  }\n}));\nexport default function AddProduct(props) {\n  const {\n    _id,\n    parentCallback,\n    pdtName,\n    pdtDesc,\n    pdtPrice,\n    pdtCat,\n    pdtQuantity,\n    pdtAtt1,\n    pdtAtt1Options,\n    pdtAtt2,\n    pdtAtt2Options,\n    pdtCollect,\n    pdtDeliver,\n    pdtPreorder,\n    pdtLeadtime,\n    pdtImages,\n    type\n  } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [state, setState] = useState({\n    name: pdtName,\n    description: typeof pdtDesc !== 'undefined' ? pdtDesc : '',\n    price: pdtPrice,\n    attribute1: typeof pdtAtt1 !== 'undefined' ? pdtAtt1 : '',\n    attribute2: typeof pdtAtt2 !== 'undefined' ? pdtAtt2 : '',\n    addAttribute1: typeof pdtAtt1 !== 'undefined' ? pdtAtt1.length !== 0 : false,\n    addAttribute2: typeof pdtAtt2 !== 'undefined' ? pdtAtt2.length !== 0 : false,\n    canDeliver: typeof pdtDeliver !== 'undefined' ? pdtDeliver : false,\n    canCollect: typeof pdtCollect !== 'undefined' ? pdtCollect : false,\n    category: pdtCat,\n    isPreOrder: pdtPreorder,\n    leadTime: pdtLeadtime - 2 //account for minimum 2 day leadtime\n    // quantity: 0,\n\n  });\n  const [helperText, setHelperText] = useState('');\n  const [quantity, setQuantity] = useState(typeof pdtQuantity !== 'undefined' ? pdtQuantity : [[]]);\n  const {\n    promiseInProgress\n  } = usePromiseTracker(); //ATTRIBUTE 1 = SIZES, ATTRIBUTE2 = COLOURS\n  //INPUT POSSIBLE COLOURS (ROW)\n\n  const [attribute1options, setAttribute1] = useState(state.addAttribute1 ? pdtAtt1Options : []);\n\n  const handleAddAttribute1Chip = chip => {\n    setAttribute1(attribute1options => [...attribute1options, chip]); // console.log(attribute1options.length); //FIX THIS\n\n    if (attribute1options.length > 0) {\n      //if 1 colour -> increase but if 0 colours to 1 colour can reuse the matrix\n      //Initial matrix = [[]]\n      setQuantity(quantity => [...quantity, []]); // console.log('ADDING ATTRIBUTE 1 CHIP, QUANTITY: ', (quantity) => [\n      //   ...quantity,\n      //   [],\n      // ]);\n    }\n  };\n\n  const handleDeleteAttribute1Chip = chip => {\n    console.log('Delete properly');\n    const indexOfColor = attribute1options.indexOf(chip); //FIX THIS\n\n    setQuantity(quantity.filter((qty, index) => index !== indexOfColor));\n\n    if (attribute1options.length === 1) {\n      //if got 1 colour only then just set to an empty array\n      // setQuantity((quantity[indexOfColor] = []));\n      setQuantity([[]]); // console.log('DELETING ATTRIBUTE 1 CHIP, QUANTITY: ', [[]]);\n    } // console.log(\n    //   'DELETING ATTRIBUTE 1 CHIP, QUANTITY: ',\n    //   quantity.filter((qty, index) => index !== indexOfColor)\n    // );\n\n\n    setAttribute1(attribute1options.filter(colour => colour !== chip));\n  }; //INPUT POSSIBLE COLOURS (ROW)\n\n\n  const [attribute2options, setAttribute2] = useState(state.addAttribute2 ? pdtAtt2Options : []);\n\n  const handleAddAttribute2Chip = chip => {\n    setAttribute2(attribute2options => [...attribute2options, chip]); //FIX THIS\n    // if (attribute2options.length >= 1) {\n    //   const newQuantity = quantity.map((colourRow) => [...colourRow, null]);\n    //   setQuantity(newQuantity);\n    //   console.log('ADDING ATTRIBUTE 2 CHIP, QUANTITY: ', newQuantity);\n    // }\n  };\n\n  const handleDeleteAttribute2Chip = chip => {\n    setAttribute2(attribute2options.filter(size => size !== chip));\n    const indexOfSize = attribute2options.indexOf(chip); //FIX THIS\n    //if product size from 1 to 0 then dont change\n\n    const newQuantity = quantity.map(colourRow => colourRow.filter((rowElem, index) => index !== indexOfSize));\n    setQuantity(newQuantity); // console.log('DELETING ATTRIBUTE 2 CHIP, QUANTITY: ', newQuantity);\n  };\n\n  const handleClearAttribute1Chips = () => {\n    setAttribute1([]);\n    setQuantity([[]]);\n  };\n\n  const handleClearAttribute2Chips = () => {\n    let newQuantity = [...quantity];\n\n    for (let option of attribute2options) {\n      const indexOfSize = attribute2options.indexOf(option);\n      newQuantity = newQuantity.map(colourRow => colourRow.filter((rowElem, index) => index !== indexOfSize));\n    }\n\n    setAttribute2([]);\n    setQuantity(newQuantity);\n  };\n\n  const tableCol = attribute2options.length === 0 ? [''].concat(attribute2options) : attribute2options;\n  const tableRow = attribute1options.length === 0 ? [''].concat(attribute1options) : attribute1options; //PRODUCT OPTION CHECKBOXES\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n\n    if (event.target.checked === false) {\n      switch (event.target.name) {\n        case 'addAttribute1':\n          setState({ ...state,\n            attribute1: '',\n            [event.target.name]: event.target.checked\n          });\n          handleClearAttribute1Chips();\n          break;\n\n        case 'addAttribute2':\n          setState({ ...state,\n            attribute2: '',\n            [event.target.name]: event.target.checked\n          });\n          handleClearAttribute2Chips();\n          break;\n\n        case 'isPreOrder':\n          setState({ ...state,\n            leadTime: 0,\n            [event.target.name]: event.target.checked\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }; //Handle quantity\n\n\n  const handleQtyChange = (row, col) => event => {\n    const copiedQuantity = [...quantity];\n    const copiedRow = [...copiedQuantity[row]];\n    copiedRow[col] = event.target.value;\n    const newQuantity = copiedQuantity.map((colourRow, rowNum) => {\n      if (rowNum === row) {\n        return copiedRow;\n      } else {\n        return colourRow;\n      }\n    });\n    setQuantity(newQuantity);\n  }; //handle quantity (null)\n\n\n  const handleNullQty = (row, col, isNull) => {\n    const copiedQuantity = [...quantity];\n    const copiedRow = [...copiedQuantity[row]];\n    isNull ? copiedRow[col] = null : copiedRow.splice(col, 1);\n    const newQuantity = copiedQuantity.map((colourRow, rowNum) => {\n      if (rowNum === row) {\n        return copiedRow;\n      } else {\n        return colourRow;\n      }\n    });\n    setQuantity(newQuantity);\n  }; //Handle input\n\n\n  const handleInputChange = prop => event => {\n    setState({ ...state,\n      [prop]: event.target.value\n    }); // console.log(event);\n  };\n\n  const handleCategoryChange = (event, value) => {\n    setState({ ...state,\n      category: value\n    });\n  }; //ADD IMAGES DROPZONE\n\n\n  const [images, setImages] = useState(typeof pdtImages !== 'undefined' ? pdtImages : []); // console.log('IMAGES HERE',   images);\n\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      let allFiles = images;\n      acceptedFiles.forEach(file => allFiles.push(file));\n      setImages(allFiles.map(file => typeof file.name === 'string' ? Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      }) : file));\n    }\n  });\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    images.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [images]);\n\n  const removeImage = file => {\n    // console.log(file);\n    setImages(images.filter(savedFile => savedFile !== file));\n  }; //DIALOG ACTIONS\n\n\n  const handleClose = () => {\n    parentCallback();\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (state.addAttribute2 && attribute2options.length === 0) {\n      setHelperText('Please input at least one attribute option, or uncheck Add Attribute 1.');\n    } else if (state.addAttribute1 && attribute1options.length === 0) {\n      setHelperText('Please input at least one attribute option, or uncheck Add Attribute 2.');\n    } else if (!(state.canDeliver || state.canCollect)) {\n      setHelperText('Please select at least one form of product collection.');\n    } else if (state.attribute1.length !== 0 && state.attribute2.length !== 0 && state.attribute1 === state.attribute2) {\n      setHelperText('Attribute 1 and Attribute 2 must be different!');\n    } else {\n      // console.log('POSTING', state);\n      const newProduct = new FormData();\n      newProduct.append('name', state.name);\n\n      if (state.description !== '') {\n        newProduct.append('description', state.description);\n      }\n\n      newProduct.append('attribute1', state.attribute1);\n      newProduct.append('attribute2', state.attribute2);\n      newProduct.append('canCollect', state.canCollect);\n      newProduct.append('canDeliver', state.canDeliver);\n      newProduct.append('category', state.category);\n      newProduct.append('colours', JSON.stringify(attribute1options));\n      newProduct.append('isPreOrder', state.isPreOrder);\n      newProduct.append('price', state.price);\n      newProduct.append('sizes', JSON.stringify(attribute2options));\n      newProduct.append('quantity', JSON.stringify(quantity));\n\n      if (state.isPreOrder) {\n        newProduct.append('leadTime', state.leadTime);\n      } else {\n        newProduct.append('leadTime', 0);\n      }\n\n      let oldImages = [];\n\n      for (let i = 0; i < images.length; i += 1) {\n        if (typeof images[i] === 'string') {\n          oldImages.push(images[i]);\n        } else if (typeof images[i] === 'object') {\n          newProduct.append('newImages', images[i]);\n        }\n      }\n\n      newProduct.append('images', JSON.stringify(oldImages)); // console.log('REALLY POSTING NOW');\n      // for (var [key, value] of newProduct.entries()) {\n      //   console.log(key);\n      //   console.log(value);\n      // }\n\n      let res;\n\n      if (type === 'add') {\n        res = await trackPromise(productService.addProduct(newProduct));\n      } else if (type === 'edit') {\n        res = await trackPromise(productService.updateProduct(_id, newProduct));\n      }\n\n      if (res.status === 200) {\n        history.go(0);\n        handleClose();\n      } else {\n        if (res.status === 400) {\n          alert(res.data.validation.body.message);\n        } else if (res.status === 413) {\n          alert('Your photos are too large! Maximum of 10 MB total!');\n        } else if (res.status === 401) {\n          alert(`Error code: ${res.status} unauthorized user, error: ${res.data.error}`);\n        } else {\n          alert(`Error code: ${res.status}, error: ${res.data}`);\n        }\n      }\n    }\n  }; //set initial state of checked, for edit product\n\n\n  const newChecked = [];\n  tableRow.map((colour, colourIndex) => {\n    tableCol.map((size, sizeIndex) => {\n      if (quantity[colourIndex][sizeIndex] > 999999) {\n        newChecked.push(`${colour}-${size}`);\n      }\n    });\n  }); //unlimited quantity toggle\n\n  const [checked, setChecked] = useState(newChecked); // console.log(checked);\n\n  const handleToggle = (value, colourIndex, sizeIndex) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n      handleNullQty(colourIndex, sizeIndex, true);\n    } else {\n      newChecked.splice(currentIndex, 1); // handleNullQty(colourIndex, sizeIndex, false);\n    }\n\n    setChecked(newChecked);\n  }; //for product category:\n\n\n  const pdtCategories = ['Accessories', 'Apparel', 'Food and Beverage', 'Bags', 'Decor', 'Illustrations/Prints/Paintings', 'Masks', 'Stationery', 'Others', 'NAF Merch'];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"Add new product\",\n    fullWidth: true,\n    maxWidth: \"md\" //or \"lg\"\n    ,\n    fullScreen: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"Add new product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }\n  }, type === 'add' ? 'Add New Product' : 'Edit Product'), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 11\n    }\n  }, \"Please fill in the following form to add your product:\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"name\",\n    label: \"Product Name\",\n    type: \"text\",\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"secondary\",\n    className: classes.formSection,\n    onChange: handleInputChange('name'),\n    defaultValue: pdtName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"description\",\n    label: \"Product Description\",\n    type: \"text\",\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"secondary\",\n    multiline: true,\n    rows: 5,\n    className: classes.formSection,\n    onChange: handleInputChange('description'),\n    defaultValue: pdtDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    variant: \"outlined\",\n    color: \"secondary\",\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 15\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"price\",\n    value: state.price,\n    onChange: handleInputChange('price'),\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 19\n      }\n    }, \"$\"),\n    fullWidth: true,\n    labelWidth: 45,\n    inputProps: {\n      min: '0',\n      step: '0.01' // pattern: '[0-9]*',\n\n    },\n    type: \"number\",\n    defaultValue: pdtPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\" // variant=\"outlined\"\n    ,\n    required: true,\n    color: \"secondary\",\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"product-category\",\n    name: \"category\",\n    options: pdtCategories,\n    getOptionLabel: option => option // style={{ width: 300 }}\n    ,\n    value: state.category,\n    onChange: handleCategoryChange,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      required: true,\n      color: \"secondary\",\n      label: \"Product Category\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\" // variant=\"outlined\"\n    ,\n    color: \"secondary\",\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 15\n    }\n  }, \"Product Options\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: classes.indentedCheckboxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.addAttribute1,\n      onChange: handleChange,\n      name: \"addAttribute1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 21\n      }\n    }),\n    label: \"Add Attribute 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 17\n    }\n  }), state.addAttribute1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.secondaryInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"attribute1\",\n    label: \"Attribute 1 (e.g. colour, size)\",\n    type: \"text\",\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"secondary\",\n    value: state.attribute1,\n    className: classes.formSection,\n    onChange: handleInputChange('attribute1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ChipInput, {\n    label: \"Attribute 1 Options\",\n    color: \"secondary\",\n    variant: \"outlined\",\n    name: \"attribute1options\",\n    value: attribute1options,\n    fullWidth: true,\n    onAdd: chip => handleAddAttribute1Chip(chip),\n    onDelete: (chip, index) => handleDeleteAttribute1Chip(chip, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 21\n    }\n  }, \"Please press Enter after each attribute option\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.addAttribute2,\n      onChange: handleChange,\n      name: \"addAttribute2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 21\n      }\n    }),\n    label: \"Add Attribute 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }), state.addAttribute2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.secondaryInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"attribute2\",\n    label: \"Attribute 2 (e.g. colour, size)\",\n    type: \"text\",\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"secondary\",\n    value: state.attribute2,\n    className: classes.formSection,\n    onChange: handleInputChange('attribute2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ChipInput, {\n    label: \"Attribute 2 Options\",\n    color: \"secondary\",\n    variant: \"outlined\",\n    value: attribute2options,\n    fullWidth: true,\n    onAdd: chip => handleAddAttribute2Chip(chip),\n    onDelete: (chip, index) => handleDeleteAttribute2Chip(chip, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 21\n    }\n  }, \"Please press Enter after each attribute option\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.isPreOrder,\n      onChange: handleChange,\n      name: \"isPreOrder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 21\n      }\n    }),\n    label: \"Pre-Order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 17\n    }\n  }), state.isPreOrder && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.secondaryInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    variant: \"outlined\",\n    color: \"secondary\",\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"leadTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 23\n    }\n  }, \"Lead Time\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"leadTime\" // value={state.leadTime}\n    ,\n    onChange: handleInputChange('leadTime'),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 27\n      }\n    }, \"days\"),\n    labelWidth: 80,\n    type: \"number\",\n    inputProps: {\n      min: '1'\n    },\n    defaultValue: state.leadTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 23\n    }\n  }, \"Product lead time indicates the minimum number of days the order must be placed before collection.\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 15\n    }\n  }, \"Product Variant Quantities\"), /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 15\n    }\n  }, tableRow.map((colour, colourIndex) => {\n    return tableCol.map((size, sizeIndex) => {\n      const labelId = `${colour}-${size}`; // const label =\n      //   (colour === '' ? '' : `${colour} colour`) +\n      //   (size === '' ? '' : `${size} size`);\n\n      const label = colour === '' && size === '' ? 'Original' : colour.toUpperCase() + ' ' + size.toUpperCase();\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: labelId,\n        disableGutters: true,\n        divider: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: `Variant: ${label}`,\n        disableTypography: true,\n        style: {\n          display: 'inline-block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          paddingLeft: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Checkbox // edge=\"center\"\n        , {\n          onChange: handleToggle(`${colour}-${size}`, colourIndex, sizeIndex),\n          checked: checked.indexOf(`${colour}-${size}`) !== -1,\n          inputProps: {\n            'aria-labelledby': `unlimited quantity for variant ${colour}-${size}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 31\n          }\n        }),\n        label: \"Unlimited Quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 27\n        }\n      }), checked.indexOf(`${colour}-${size}`) === -1 && /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        label: \"Quantity\",\n        type: \"number\",\n        inputProps: {\n          min: '0'\n        },\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        onChange: handleQtyChange(colourIndex, sizeIndex, false),\n        defaultValue: quantity[colourIndex][sizeIndex] < 999999 ? quantity[colourIndex][sizeIndex] : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 29\n        }\n      })));\n    });\n  }))), /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 13\n    }\n  }, \"Product Collection Options\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: classes.indentedCheckboxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.canCollect,\n      onChange: handleChange,\n      name: \"canCollect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 19\n      }\n    }),\n    label: \"Allow self-collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.canDeliver,\n      onChange: handleChange,\n      name: \"canDeliver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 19\n      }\n    }),\n    label: \"Allow delivery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\" // variant=\"outlined\"\n    ,\n    color: \"secondary\",\n    className: classes.formSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 15\n    }\n  }, \"Product Images\"), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: classes.dropzone\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 17\n    }\n  }, \"Drag and drop your product images here, or click to select files (Squared images are preferred)\")), /*#__PURE__*/React.createElement(\"aside\", {\n    className: classes.thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 15\n    }\n  }, images.map(file => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"remove image\",\n    color: \"secondary\",\n    onClick: () => removeImage(file),\n    style: {\n      position: 'absolute',\n      top: 0,\n      right: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 21\n    }\n  }, typeof file.preview === 'undefined' ? /*#__PURE__*/React.createElement(\"img\", {\n    src: file,\n    className: classes.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: file.preview,\n    className: classes.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: promiseInProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 13\n    }\n  }, type === 'add' ? 'Add Product' : 'Update Product'), /*#__PURE__*/React.createElement(FormHelperText, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 13\n    }\n  }, helperText), /*#__PURE__*/React.createElement(LoadingSpinnerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    disabled: promiseInProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/MarketPlacePage/AddProduct.js"],"names":["React","useState","useEffect","Component","withStyles","makeStyles","useTheme","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Typography","FormLabel","FormGroup","FormControlLabel","Checkbox","ChipInput","productService","useDropzone","IconButton","CloseRoundedIcon","useHistory","List","ListItem","ListItemSecondaryAction","ListItemText","Autocomplete","LoadingSpinnerComponent","trackPromise","usePromiseTracker","useStyles","theme","root","padding","spacing","formSection","marginTop","marginBottom","display","indentedCheckboxes","marginLeft","secondaryInput","rowLabels","align","dropzone","border","color","margin","textAlign","fontWeight","backgroundColor","palette","background","default","cursor","outline","thumbsContainer","width","flexDirection","flexWrap","justifyContent","thumb","position","borderRadius","marginRight","thumbInner","height","img","breakpoints","down","objectFit","AddProduct","props","_id","parentCallback","pdtName","pdtDesc","pdtPrice","pdtCat","pdtQuantity","pdtAtt1","pdtAtt1Options","pdtAtt2","pdtAtt2Options","pdtCollect","pdtDeliver","pdtPreorder","pdtLeadtime","pdtImages","type","classes","history","state","setState","name","description","price","attribute1","attribute2","addAttribute1","length","addAttribute2","canDeliver","canCollect","category","isPreOrder","leadTime","helperText","setHelperText","quantity","setQuantity","promiseInProgress","attribute1options","setAttribute1","handleAddAttribute1Chip","chip","handleDeleteAttribute1Chip","console","log","indexOfColor","indexOf","filter","qty","index","colour","attribute2options","setAttribute2","handleAddAttribute2Chip","handleDeleteAttribute2Chip","size","indexOfSize","newQuantity","map","colourRow","rowElem","handleClearAttribute1Chips","handleClearAttribute2Chips","option","tableCol","concat","tableRow","handleChange","event","target","checked","handleQtyChange","row","col","copiedQuantity","copiedRow","value","rowNum","handleNullQty","isNull","splice","handleInputChange","prop","handleCategoryChange","images","setImages","getRootProps","getInputProps","accept","onDrop","acceptedFiles","allFiles","forEach","file","push","Object","assign","preview","URL","createObjectURL","revokeObjectURL","removeImage","savedFile","handleClose","handleSubmit","preventDefault","newProduct","FormData","append","JSON","stringify","oldImages","i","res","addProduct","updateProduct","status","go","alert","data","validation","body","message","error","newChecked","colourIndex","sizeIndex","setChecked","handleToggle","currentIndex","pdtCategories","form","min","step","params","labelId","label","toUpperCase","paddingLeft","className","top","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ChipInput from 'material-ui-chip-input';\nimport productService from '../services/products';\nimport { useDropzone } from 'react-dropzone';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport { useHistory } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { LoadingSpinnerComponent } from '../utils/LoadingSpinnerComponent';\nimport { trackPromise } from 'react-promise-tracker';\nimport { usePromiseTracker } from 'react-promise-tracker';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  formSection: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'block',\n  },\n  indentedCheckboxes: {\n    marginLeft: theme.spacing(2),\n  },\n  secondaryInput: {\n    marginLeft: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  rowLabels: {\n    align: 'center',\n  },\n  //IMAGE DROPZONE STYLING\n  dropzone: {\n    // backgroundColor: 'pink',\n    border: '3px dashed rgba(179, 86, 153, 0.6)',\n    color: 'rgba(179, 86, 153, 1)',\n    padding: theme.spacing(5),\n    marginTop: theme.spacing(2),\n    margin: 'auto',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer',\n    },\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  thumbsContainer: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16,\n    justifyContent: 'center',\n  },\n  thumb: {\n    display: 'inline-flex',\n    position: 'relative',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    padding: 5,\n  },\n  thumbInner: {\n    //   minWidth: 0,\n    //   overflow: 'hidden',\n    height: 150,\n  },\n  img: {\n    display: 'block',\n    width: 'auto',\n    height: '100%',\n  },\n  [theme.breakpoints.down('xs')]: {\n    thumbInner: {\n      height: 'auto',\n    },\n    img: {\n      width: '100%',\n      objectFit: 'cover',\n    },\n  },\n}));\n\nexport default function AddProduct(props) {\n  const {\n    _id,\n    parentCallback,\n    pdtName,\n    pdtDesc,\n    pdtPrice,\n    pdtCat,\n    pdtQuantity,\n    pdtAtt1,\n    pdtAtt1Options,\n    pdtAtt2,\n    pdtAtt2Options,\n    pdtCollect,\n    pdtDeliver,\n    pdtPreorder,\n    pdtLeadtime,\n    pdtImages,\n    type,\n  } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [state, setState] = useState({\n    name: pdtName,\n    description: typeof pdtDesc !== 'undefined' ? pdtDesc : '',\n    price: pdtPrice,\n    attribute1: typeof pdtAtt1 !== 'undefined' ? pdtAtt1 : '',\n    attribute2: typeof pdtAtt2 !== 'undefined' ? pdtAtt2 : '',\n    addAttribute1:\n      typeof pdtAtt1 !== 'undefined' ? pdtAtt1.length !== 0 : false,\n    addAttribute2:\n      typeof pdtAtt2 !== 'undefined' ? pdtAtt2.length !== 0 : false,\n    canDeliver: typeof pdtDeliver !== 'undefined' ? pdtDeliver : false,\n    canCollect: typeof pdtCollect !== 'undefined' ? pdtCollect : false,\n    category: pdtCat,\n    isPreOrder: pdtPreorder,\n    leadTime: pdtLeadtime - 2, //account for minimum 2 day leadtime\n    // quantity: 0,\n  });\n\n  const [helperText, setHelperText] = useState('');\n  const [quantity, setQuantity] = useState(\n    typeof pdtQuantity !== 'undefined' ? pdtQuantity : [[]]\n  );\n  const { promiseInProgress } = usePromiseTracker();\n\n  //ATTRIBUTE 1 = SIZES, ATTRIBUTE2 = COLOURS\n  //INPUT POSSIBLE COLOURS (ROW)\n  const [attribute1options, setAttribute1] = useState(\n    state.addAttribute1 ? pdtAtt1Options : []\n  );\n  const handleAddAttribute1Chip = (chip) => {\n    setAttribute1((attribute1options) => [...attribute1options, chip]);\n    // console.log(attribute1options.length); //FIX THIS\n    if (attribute1options.length > 0) {\n      //if 1 colour -> increase but if 0 colours to 1 colour can reuse the matrix\n      //Initial matrix = [[]]\n      setQuantity((quantity) => [...quantity, []]);\n      // console.log('ADDING ATTRIBUTE 1 CHIP, QUANTITY: ', (quantity) => [\n      //   ...quantity,\n      //   [],\n      // ]);\n    }\n  };\n  const handleDeleteAttribute1Chip = (chip) => {\n    console.log('Delete properly');\n    const indexOfColor = attribute1options.indexOf(chip);\n    //FIX THIS\n    setQuantity(quantity.filter((qty, index) => index !== indexOfColor));\n    if (attribute1options.length === 1) {\n      //if got 1 colour only then just set to an empty array\n      // setQuantity((quantity[indexOfColor] = []));\n      setQuantity([[]]);\n      // console.log('DELETING ATTRIBUTE 1 CHIP, QUANTITY: ', [[]]);\n    }\n    // console.log(\n    //   'DELETING ATTRIBUTE 1 CHIP, QUANTITY: ',\n    //   quantity.filter((qty, index) => index !== indexOfColor)\n    // );\n    setAttribute1(attribute1options.filter((colour) => colour !== chip));\n  };\n\n  //INPUT POSSIBLE COLOURS (ROW)\n  const [attribute2options, setAttribute2] = useState(\n    state.addAttribute2 ? pdtAtt2Options : []\n  );\n\n  const handleAddAttribute2Chip = (chip) => {\n    setAttribute2((attribute2options) => [...attribute2options, chip]);\n    //FIX THIS\n    // if (attribute2options.length >= 1) {\n    //   const newQuantity = quantity.map((colourRow) => [...colourRow, null]);\n    //   setQuantity(newQuantity);\n    //   console.log('ADDING ATTRIBUTE 2 CHIP, QUANTITY: ', newQuantity);\n    // }\n  };\n  const handleDeleteAttribute2Chip = (chip) => {\n    setAttribute2(attribute2options.filter((size) => size !== chip));\n    const indexOfSize = attribute2options.indexOf(chip);\n    //FIX THIS\n    //if product size from 1 to 0 then dont change\n    const newQuantity = quantity.map((colourRow) =>\n      colourRow.filter((rowElem, index) => index !== indexOfSize)\n    );\n    setQuantity(newQuantity);\n    // console.log('DELETING ATTRIBUTE 2 CHIP, QUANTITY: ', newQuantity);\n  };\n\n  const handleClearAttribute1Chips = () => {\n    setAttribute1([]);\n    setQuantity([[]]);\n  };\n\n  const handleClearAttribute2Chips = () => {\n    let newQuantity = [...quantity];\n    for (let option of attribute2options) {\n      const indexOfSize = attribute2options.indexOf(option);\n      newQuantity = newQuantity.map((colourRow) =>\n        colourRow.filter((rowElem, index) => index !== indexOfSize)\n      );\n    }\n\n    setAttribute2([]);\n    setQuantity(newQuantity);\n  };\n\n  const tableCol =\n    attribute2options.length === 0\n      ? [''].concat(attribute2options)\n      : attribute2options;\n\n  const tableRow =\n    attribute1options.length === 0\n      ? [''].concat(attribute1options)\n      : attribute1options;\n\n  //PRODUCT OPTION CHECKBOXES\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.checked,\n    });\n\n    if (event.target.checked === false) {\n      switch (event.target.name) {\n        case 'addAttribute1':\n          setState({\n            ...state,\n            attribute1: '',\n            [event.target.name]: event.target.checked,\n          });\n          handleClearAttribute1Chips();\n          break;\n        case 'addAttribute2':\n          setState({\n            ...state,\n            attribute2: '',\n            [event.target.name]: event.target.checked,\n          });\n          handleClearAttribute2Chips();\n          break;\n        case 'isPreOrder':\n          setState({\n            ...state,\n            leadTime: 0,\n            [event.target.name]: event.target.checked,\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  //Handle quantity\n  const handleQtyChange = (row, col) => (event) => {\n    const copiedQuantity = [...quantity];\n    const copiedRow = [...copiedQuantity[row]];\n    copiedRow[col] = event.target.value;\n    const newQuantity = copiedQuantity.map((colourRow, rowNum) => {\n      if (rowNum === row) {\n        return copiedRow;\n      } else {\n        return colourRow;\n      }\n    });\n    setQuantity(newQuantity);\n  };\n  //handle quantity (null)\n  const handleNullQty = (row, col, isNull) => {\n    const copiedQuantity = [...quantity];\n    const copiedRow = [...copiedQuantity[row]];\n    isNull ? (copiedRow[col] = null) : copiedRow.splice(col, 1);\n    const newQuantity = copiedQuantity.map((colourRow, rowNum) => {\n      if (rowNum === row) {\n        return copiedRow;\n      } else {\n        return colourRow;\n      }\n    });\n    setQuantity(newQuantity);\n  };\n\n  //Handle input\n  const handleInputChange = (prop) => (event) => {\n    setState({ ...state, [prop]: event.target.value });\n    // console.log(event);\n  };\n\n  const handleCategoryChange = (event, value) => {\n    setState({ ...state, category: value });\n  };\n\n  //ADD IMAGES DROPZONE\n  const [images, setImages] = useState(\n    typeof pdtImages !== 'undefined' ? pdtImages : []\n  );\n  // console.log('IMAGES HERE',   images);\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    onDrop: (acceptedFiles) => {\n      let allFiles = images;\n      acceptedFiles.forEach((file) => allFiles.push(file));\n      setImages(\n        allFiles.map((file) =>\n          typeof file.name === 'string'\n            ? Object.assign(file, {\n                preview: URL.createObjectURL(file),\n              })\n            : file\n        )\n      );\n    },\n  });\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      images.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [images]\n  );\n\n  const removeImage = (file) => {\n    // console.log(file);\n    setImages(images.filter((savedFile) => savedFile !== file));\n  };\n\n  //DIALOG ACTIONS\n  const handleClose = () => {\n    parentCallback();\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (state.addAttribute2 && attribute2options.length === 0) {\n      setHelperText(\n        'Please input at least one attribute option, or uncheck Add Attribute 1.'\n      );\n    } else if (state.addAttribute1 && attribute1options.length === 0) {\n      setHelperText(\n        'Please input at least one attribute option, or uncheck Add Attribute 2.'\n      );\n    } else if (!(state.canDeliver || state.canCollect)) {\n      setHelperText('Please select at least one form of product collection.');\n    } else if (\n      state.attribute1.length !== 0 &&\n      state.attribute2.length !== 0 &&\n      state.attribute1 === state.attribute2\n    ) {\n      setHelperText('Attribute 1 and Attribute 2 must be different!');\n    } else {\n      // console.log('POSTING', state);\n      const newProduct = new FormData();\n      newProduct.append('name', state.name);\n      if (state.description !== '') {\n        newProduct.append('description', state.description);\n      }\n      newProduct.append('attribute1', state.attribute1);\n      newProduct.append('attribute2', state.attribute2);\n      newProduct.append('canCollect', state.canCollect);\n      newProduct.append('canDeliver', state.canDeliver);\n      newProduct.append('category', state.category);\n      newProduct.append('colours', JSON.stringify(attribute1options));\n      newProduct.append('isPreOrder', state.isPreOrder);\n      newProduct.append('price', state.price);\n      newProduct.append('sizes', JSON.stringify(attribute2options));\n      newProduct.append('quantity', JSON.stringify(quantity));\n      if (state.isPreOrder) {\n        newProduct.append('leadTime', state.leadTime);\n      } else {\n        newProduct.append('leadTime', 0);\n      }\n      let oldImages = [];\n      for (let i = 0; i < images.length; i += 1) {\n        if (typeof images[i] === 'string') {\n          oldImages.push(images[i]);\n        } else if (typeof images[i] === 'object') {\n          newProduct.append('newImages', images[i]);\n        }\n      }\n      newProduct.append('images', JSON.stringify(oldImages));\n      // console.log('REALLY POSTING NOW');\n      // for (var [key, value] of newProduct.entries()) {\n      //   console.log(key);\n      //   console.log(value);\n      // }\n      let res;\n      if (type === 'add') {\n        res = await trackPromise(productService.addProduct(newProduct));\n      } else if (type === 'edit') {\n        res = await trackPromise(productService.updateProduct(_id, newProduct));\n      }\n      if (res.status === 200) {\n        history.go(0);\n        handleClose();\n      } else {\n        if (res.status === 400) {\n          alert(res.data.validation.body.message);\n        } else if (res.status === 413) {\n          alert('Your photos are too large! Maximum of 10 MB total!');\n        } else if (res.status === 401) {\n          alert(\n            `Error code: ${res.status} unauthorized user, error: ${res.data.error}`\n          );\n        } else {\n          alert(`Error code: ${res.status}, error: ${res.data}`);\n        }\n      }\n    }\n  };\n\n  //set initial state of checked, for edit product\n  const newChecked = [];\n  tableRow.map((colour, colourIndex) => {\n    tableCol.map((size, sizeIndex) => {\n      if (quantity[colourIndex][sizeIndex] > 999999) {\n        newChecked.push(`${colour}-${size}`);\n      }\n    });\n  });\n\n  //unlimited quantity toggle\n  const [checked, setChecked] = useState(newChecked);\n  // console.log(checked);\n\n  const handleToggle = (value, colourIndex, sizeIndex) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n      handleNullQty(colourIndex, sizeIndex, true);\n    } else {\n      newChecked.splice(currentIndex, 1);\n      // handleNullQty(colourIndex, sizeIndex, false);\n    }\n\n    setChecked(newChecked);\n  };\n\n  //for product category:\n  const pdtCategories = [\n    'Accessories',\n    'Apparel',\n    'Food and Beverage',\n    'Bags',\n    'Decor',\n    'Illustrations/Prints/Paintings',\n    'Masks',\n    'Stationery',\n    'Others',\n    'NAF Merch',\n  ];\n\n  return (\n    <>\n      <Dialog\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"Add new product\"\n        fullWidth={true}\n        maxWidth=\"md\" //or \"lg\"\n        fullScreen\n        className={classes.root}\n      >\n        <DialogTitle id=\"Add new product\">\n          {type === 'add' ? 'Add New Product' : 'Edit Product'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please fill in the following form to add your product:\n          </DialogContentText>\n          <form\n            className={classes.form}\n            autoComplete=\"off\"\n            onSubmit={handleSubmit}\n          >\n            <TextField\n              required\n              id=\"name\"\n              label=\"Product Name\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.formSection}\n              onChange={handleInputChange('name')}\n              defaultValue={pdtName}\n            />\n            <TextField\n              id=\"description\"\n              label=\"Product Description\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              color=\"secondary\"\n              multiline\n              rows={5}\n              className={classes.formSection}\n              onChange={handleInputChange('description')}\n              defaultValue={pdtDesc}\n            />\n            <FormControl\n              required\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.formSection}\n            >\n              <InputLabel htmlFor=\"price\">Price</InputLabel>\n              <OutlinedInput\n                id=\"price\"\n                value={state.price}\n                onChange={handleInputChange('price')}\n                startAdornment={\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                }\n                fullWidth\n                labelWidth={45}\n                inputProps={{\n                  min: '0',\n                  step: '0.01',\n                  // pattern: '[0-9]*',\n                }}\n                type=\"number\"\n                defaultValue={pdtPrice}\n              />\n            </FormControl>\n            <FormControl\n              component=\"fieldset\"\n              // variant=\"outlined\"\n              required\n              color=\"secondary\"\n              className={classes.formSection}\n            >\n              <Autocomplete\n                id=\"product-category\"\n                name=\"category\"\n                options={pdtCategories}\n                getOptionLabel={(option) => option}\n                // style={{ width: 300 }}\n                value={state.category}\n                onChange={handleCategoryChange}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    required\n                    color=\"secondary\"\n                    label=\"Product Category\"\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </FormControl>\n            <FormControl\n              component=\"fieldset\"\n              // variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.formSection}\n            >\n              <FormLabel component=\"legend\">Product Options</FormLabel>\n              <FormGroup className={classes.indentedCheckboxes}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.addAttribute1}\n                      onChange={handleChange}\n                      name=\"addAttribute1\"\n                    />\n                  }\n                  label=\"Add Attribute 1\"\n                />\n                {state.addAttribute1 && (\n                  <div className={classes.secondaryInput}>\n                    <TextField\n                      required\n                      id=\"attribute1\"\n                      label=\"Attribute 1 (e.g. colour, size)\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      value={state.attribute1}\n                      className={classes.formSection}\n                      onChange={handleInputChange('attribute1')}\n                    />\n                    <ChipInput\n                      label=\"Attribute 1 Options\"\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      name=\"attribute1options\"\n                      value={attribute1options}\n                      fullWidth\n                      onAdd={(chip) => handleAddAttribute1Chip(chip)}\n                      onDelete={(chip, index) =>\n                        handleDeleteAttribute1Chip(chip, index)\n                      }\n                    />\n                    <FormHelperText>\n                      Please press Enter after each attribute option\n                    </FormHelperText>\n                  </div>\n                )}\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.addAttribute2}\n                      onChange={handleChange}\n                      name=\"addAttribute2\"\n                    />\n                  }\n                  label=\"Add Attribute 2\"\n                />\n                {state.addAttribute2 && (\n                  <div className={classes.secondaryInput}>\n                    <TextField\n                      required\n                      id=\"attribute2\"\n                      label=\"Attribute 2 (e.g. colour, size)\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      value={state.attribute2}\n                      className={classes.formSection}\n                      onChange={handleInputChange('attribute2')}\n                    />\n                    <ChipInput\n                      label=\"Attribute 2 Options\"\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      value={attribute2options}\n                      fullWidth\n                      onAdd={(chip) => handleAddAttribute2Chip(chip)}\n                      onDelete={(chip, index) =>\n                        handleDeleteAttribute2Chip(chip, index)\n                      }\n                    />\n                    <FormHelperText>\n                      Please press Enter after each attribute option\n                    </FormHelperText>\n                  </div>\n                )}\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.isPreOrder}\n                      onChange={handleChange}\n                      name=\"isPreOrder\"\n                    />\n                  }\n                  label=\"Pre-Order\"\n                />\n                {state.isPreOrder && (\n                  <div className={classes.secondaryInput}>\n                    <FormControl\n                      required\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      className={classes.formSection}\n                    >\n                      <InputLabel htmlFor=\"leadTime\">Lead Time</InputLabel>\n                      <OutlinedInput\n                        id=\"leadTime\"\n                        // value={state.leadTime}\n                        onChange={handleInputChange('leadTime')}\n                        endAdornment={\n                          <InputAdornment position=\"end\">days</InputAdornment>\n                        }\n                        labelWidth={80}\n                        type=\"number\"\n                        inputProps={{\n                          min: '1',\n                        }}\n                        defaultValue={state.leadTime}\n                      />\n                      <FormHelperText>\n                        Product lead time indicates the minimum number of days\n                        the order must be placed before collection.\n                      </FormHelperText>\n                    </FormControl>\n                  </div>\n                )}\n              </FormGroup>\n            </FormControl>\n            <div className={classes.quantity}>\n              <FormLabel component=\"legend\">\n                Product Variant Quantities\n              </FormLabel>\n              <List className={classes.root}>\n                {tableRow.map((colour, colourIndex) => {\n                  return tableCol.map((size, sizeIndex) => {\n                    const labelId = `${colour}-${size}`;\n                    // const label =\n                    //   (colour === '' ? '' : `${colour} colour`) +\n                    //   (size === '' ? '' : `${size} size`);\n                    const label =\n                      colour === '' && size === ''\n                        ? 'Original'\n                        : colour.toUpperCase() + ' ' + size.toUpperCase();\n                    return (\n                      <ListItem key={labelId} disableGutters divider>\n                        <ListItemText\n                          id={labelId}\n                          primary={`Variant: ${label}`}\n                          disableTypography\n                          style={{ display: 'inline-block' }}\n                        />\n                        {/* <ListItemSecondaryAction\n                        style={{ display: 'inline-block' }} //this has shitty styling\n                      > */}\n                        <div\n                          style={{ display: 'inline-block', paddingLeft: 15 }}\n                        >\n                          <FormControlLabel\n                            control={\n                              <Checkbox\n                                // edge=\"center\"\n                                onChange={handleToggle(\n                                  `${colour}-${size}`,\n                                  colourIndex,\n                                  sizeIndex\n                                )}\n                                checked={\n                                  checked.indexOf(`${colour}-${size}`) !== -1\n                                }\n                                inputProps={{\n                                  'aria-labelledby': `unlimited quantity for variant ${colour}-${size}`,\n                                }}\n                              />\n                            }\n                            label=\"Unlimited Quantity\"\n                          />\n                          {checked.indexOf(`${colour}-${size}`) === -1 && (\n                            <TextField\n                              required\n                              label=\"Quantity\"\n                              type=\"number\"\n                              inputProps={{ min: '0' }}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              onChange={handleQtyChange(\n                                colourIndex,\n                                sizeIndex,\n                                false\n                              )}\n                              defaultValue={\n                                quantity[colourIndex][sizeIndex] < 999999\n                                  ? quantity[colourIndex][sizeIndex]\n                                  : ''\n                              }\n                            />\n                          )}\n                        </div>\n                        {/* </ListItemSecondaryAction> */}\n                      </ListItem>\n                    );\n                  });\n                })}\n              </List>\n            </div>\n\n            <FormLabel component=\"legend\" required>\n              Product Collection Options\n            </FormLabel>\n            <FormGroup className={classes.indentedCheckboxes}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={state.canCollect}\n                    onChange={handleChange}\n                    name=\"canCollect\"\n                  />\n                }\n                label=\"Allow self-collection\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={state.canDeliver}\n                    onChange={handleChange}\n                    name=\"canDeliver\"\n                  />\n                }\n                label=\"Allow delivery\"\n              />\n            </FormGroup>\n\n            <FormControl\n              component=\"fieldset\"\n              // variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.formSection}\n            >\n              <FormLabel component=\"legend\">Product Images</FormLabel>\n              <div {...getRootProps({ className: classes.dropzone })}>\n                <input {...getInputProps()} />\n                <p>\n                  Drag and drop your product images here, or click to select\n                  files (Squared images are preferred)\n                </p>\n              </div>\n              <aside className={classes.thumbsContainer}>\n                {images.map((file) => (\n                  <div className={classes.thumb} key={file.name}>\n                    <IconButton\n                      aria-label=\"remove image\"\n                      color=\"secondary\"\n                      onClick={() => removeImage(file)}\n                      style={{\n                        position: 'absolute',\n                        top: 0,\n                        right: 0,\n                      }}\n                    >\n                      <CloseRoundedIcon />\n                    </IconButton>\n                    <div className={classes.thumbInner}>\n                      {typeof file.preview === 'undefined' ? (\n                        <img src={file} className={classes.img} />\n                      ) : (\n                        <img src={file.preview} className={classes.img} />\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </aside>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={promiseInProgress}\n            >\n              {type === 'add' ? 'Add Product' : 'Update Product'}\n            </Button>\n            <FormHelperText style={{ color: 'red' }}>\n              {helperText}\n            </FormHelperText>\n            <LoadingSpinnerComponent />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color=\"secondary\"\n            disabled={promiseInProgress}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}