{"ast":null,"code":"import { axiosConfig } from '../config/axiosConfig';\nimport config from '../config/env';\nconst baseUrl = config.endpoints.admin;\n\nconst getWorkshops = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/workshops/`\n    });\n    console.log(res);\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst verifyOrder = async orderId => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/${orderId}/orderVerify/`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst verifyWorkshop = async (studentId, workshopName) => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/workshopVerify/`,\n      params: {\n        studentId,\n        workshopName\n      }\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst sendEmails = async selfCollDate => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/selfcollect`,\n      data: {\n        collectionDate: selfCollDate\n      }\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst sendWorkshopReminderEmails = async workshop_id => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/reminderEmail/${workshop_id}`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst addPoints = async (newInput, emailAddress) => {\n  try {\n    const res = await axiosConfig({\n      method: 'patch',\n      url: `${baseUrl}/luckydraw/`,\n      params: {\n        emailAddress\n      },\n      data: newInput\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst downloadLuckyDraw = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/downloadluckydraw/`,\n      responseType: 'blob'\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst downloadVotes = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/downloadvotes/`,\n      responseType: 'blob'\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n}; // JT: added call to bumpWaitlist endpoint\n\n\nconst bumpWaitlist = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/bumpWaitlist/`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport default {\n  getWorkshops,\n  sendEmails,\n  verifyOrder,\n  verifyWorkshop,\n  addPoints,\n  sendWorkshopReminderEmails,\n  downloadLuckyDraw,\n  downloadVotes,\n  bumpWaitlist\n};","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/services/admin.js"],"names":["axiosConfig","config","baseUrl","endpoints","admin","getWorkshops","res","method","url","console","log","err","response","verifyOrder","orderId","verifyWorkshop","studentId","workshopName","params","sendEmails","selfCollDate","data","collectionDate","sendWorkshopReminderEmails","workshop_id","addPoints","newInput","emailAddress","downloadLuckyDraw","responseType","downloadVotes","bumpWaitlist"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiBC,KAAjC;;AACA,MAAMC,YAAY,GAAG,YAAY;AAC/B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ;AAFY,KAAD,CAA7B;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,WAAOA,GAAP;AACD,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAXD;;AAaA,MAAMC,WAAW,GAAG,MAAOC,OAAP,IAAmB;AACrC,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,IAAGY,OAAQ;AAFC,KAAD,CAA7B;AAIA,WAAOR,GAAP;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAYA,MAAMG,cAAc,GAAG,OAAOC,SAAP,EAAkBC,YAAlB,KAAmC;AACxD,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,kBAFY;AAG5BgB,MAAAA,MAAM,EAAE;AACNF,QAAAA,SADM;AAENC,QAAAA;AAFM;AAHoB,KAAD,CAA7B;AAQA,WAAOX,GAAP;AACD,GAVD,CAUE,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAdD;;AAgBA,MAAMO,UAAU,GAAG,MAAOC,YAAP,IAAwB;AACzC,MAAI;AACF,UAAMd,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,cAFY;AAG5BmB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,cAAc,EAAEF;AAAlB;AAHsB,KAAD,CAA7B;AAKA,WAAOd,GAAP;AACD,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAXD;;AAaA,MAAMW,0BAA0B,GAAG,MAAOC,WAAP,IAAuB;AACxD,MAAI;AACF,UAAMlB,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,kBAAiBsB,WAAY;AAFjB,KAAD,CAA7B;AAIA,WAAOlB,GAAP;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAYA,MAAMa,SAAS,GAAG,OAAOC,QAAP,EAAiBC,YAAjB,KAAkC;AAClD,MAAI;AACF,UAAMrB,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,OADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,aAFY;AAG5BgB,MAAAA,MAAM,EAAE;AACNS,QAAAA;AADM,OAHoB;AAM5BN,MAAAA,IAAI,EAAEK;AANsB,KAAD,CAA7B;AAQA,WAAOpB,GAAP;AACD,GAVD,CAUE,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAdD;;AAgBA,MAAMgB,iBAAiB,GAAG,YAAY;AACpC,MAAI;AACF,UAAMtB,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,qBAFY;AAG5B2B,MAAAA,YAAY,EAAE;AAHc,KAAD,CAA7B;AAKA,WAAOvB,GAAP;AACD,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAXD;;AAaA,MAAMkB,aAAa,GAAG,YAAY;AAChC,MAAI;AACF,UAAMxB,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,iBAFY;AAG5B2B,MAAAA,YAAY,EAAE;AAHc,KAAD,CAA7B;AAKA,WAAOvB,GAAP;AACD,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAXD,C,CAaA;;;AACA,MAAMmB,YAAY,GAAG,YAAW;AAC9B,MAAI;AACF,UAAMzB,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ;AAFY,KAAD,CAA7B;AAIA,WAAOI,GAAP;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAYA,eAAe;AACbP,EAAAA,YADa;AAEbc,EAAAA,UAFa;AAGbN,EAAAA,WAHa;AAIbE,EAAAA,cAJa;AAKbU,EAAAA,SALa;AAMbF,EAAAA,0BANa;AAObK,EAAAA,iBAPa;AAQbE,EAAAA,aARa;AASbC,EAAAA;AATa,CAAf","sourcesContent":["import { axiosConfig } from '../config/axiosConfig';\nimport config from '../config/env';\nconst baseUrl = config.endpoints.admin;\nconst getWorkshops = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/workshops/`,\n    });\n    console.log(res);\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst verifyOrder = async (orderId) => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/${orderId}/orderVerify/`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst verifyWorkshop = async (studentId, workshopName) => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/workshopVerify/`,\n      params: {\n        studentId,\n        workshopName,\n      },\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst sendEmails = async (selfCollDate) => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/selfcollect`,\n      data: { collectionDate: selfCollDate },\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst sendWorkshopReminderEmails = async (workshop_id) => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/reminderEmail/${workshop_id}`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst addPoints = async (newInput, emailAddress) => {\n  try {\n    const res = await axiosConfig({\n      method: 'patch',\n      url: `${baseUrl}/luckydraw/`,\n      params: {\n        emailAddress,\n      },\n      data: newInput,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst downloadLuckyDraw = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/downloadluckydraw/`,\n      responseType: 'blob',\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst downloadVotes = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/downloadvotes/`,\n      responseType: 'blob',\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\n// JT: added call to bumpWaitlist endpoint\nconst bumpWaitlist = async() => {\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/bumpWaitlist/`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport default {\n  getWorkshops,\n  sendEmails,\n  verifyOrder,\n  verifyWorkshop,\n  addPoints,\n  sendWorkshopReminderEmails,\n  downloadLuckyDraw,\n  downloadVotes,\n  bumpWaitlist,\n};\n"]},"metadata":{},"sourceType":"module"}