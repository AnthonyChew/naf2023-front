{"ast":null,"code":"import { axiosConfig } from '../config/axiosConfig';\nimport config from '../config/env';\nconst baseUrl = config.endpoints.products;\n\nconst getAllProducts = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst getIndivProduct = async id => {\n  const {\n    data\n  } = await axiosConfig({\n    method: 'get',\n    url: `${baseUrl}/${id}/`\n  });\n  return data;\n};\n\nconst addProduct = async newProduct => {\n  // console.log(`Product to be added${newProduct}`);\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/`,\n      data: newProduct,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst updateProduct = async (id, newProduct) => {\n  try {\n    const res = await axiosConfig({\n      method: 'put',\n      url: `${baseUrl}/${id}/`,\n      data: newProduct\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst deleteProduct = async id => {\n  try {\n    const res = await axiosConfig({\n      method: 'delete',\n      url: `${baseUrl}/${id}/`\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport default {\n  getAllProducts,\n  getIndivProduct,\n  addProduct,\n  updateProduct,\n  deleteProduct\n};","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/services/products.js"],"names":["axiosConfig","config","baseUrl","endpoints","products","getAllProducts","res","method","url","err","response","getIndivProduct","id","data","addProduct","newProduct","headers","updateProduct","deleteProduct"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiBC,QAAjC;;AAEA,MAAMC,cAAc,GAAG,YAAY;AACjC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ;AAFY,KAAD,CAA7B;AAIA,WAAOI,GAAP;AACD,GAND,CAME,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAYA,MAAMC,eAAe,GAAG,MAAOC,EAAP,IAAc;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMb,WAAW,CAAC;AACjCO,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,GAAG,EAAG,GAAEN,OAAQ,IAAGU,EAAG;AAFW,GAAD,CAAlC;AAIA,SAAOC,IAAP;AACD,CAND;;AAQA,MAAMC,UAAU,GAAG,MAAOC,UAAP,IAAsB;AACvC;AACA,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,GAFY;AAG5BW,MAAAA,IAAI,EAAEE,UAHsB;AAI5BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJmB,KAAD,CAA7B;AAQA,WAAOV,GAAP;AACD,GAVD,CAUE,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAfD;;AAiBA,MAAMO,aAAa,GAAG,OAAOL,EAAP,EAAWG,UAAX,KAA0B;AAC9C,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,IAAGU,EAAG,GAFM;AAG5BC,MAAAA,IAAI,EAAEE;AAHsB,KAAD,CAA7B;AAKA,WAAOT,GAAP;AACD,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAXD;;AAaA,MAAMQ,aAAa,GAAG,MAAON,EAAP,IAAc;AAClC,MAAI;AACF,UAAMN,GAAG,GAAG,MAAMN,WAAW,CAAC;AAC5BO,MAAAA,MAAM,EAAE,QADoB;AAE5BC,MAAAA,GAAG,EAAG,GAAEN,OAAQ,IAAGU,EAAG;AAFM,KAAD,CAA7B;AAIA,WAAON,GAAP;AACD,GAND,CAME,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAG,CAACC,QAAX;AACD;AACF,CAVD;;AAWA,eAAe;AACbL,EAAAA,cADa;AAEbM,EAAAA,eAFa;AAGbG,EAAAA,UAHa;AAIbG,EAAAA,aAJa;AAKbC,EAAAA;AALa,CAAf","sourcesContent":["import { axiosConfig } from '../config/axiosConfig';\nimport config from '../config/env';\nconst baseUrl = config.endpoints.products;\n\nconst getAllProducts = async () => {\n  try {\n    const res = await axiosConfig({\n      method: 'get',\n      url: `${baseUrl}/`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst getIndivProduct = async (id) => {\n  const { data } = await axiosConfig({\n    method: 'get',\n    url: `${baseUrl}/${id}/`,\n  });\n  return data;\n};\n\nconst addProduct = async (newProduct) => {\n  // console.log(`Product to be added${newProduct}`);\n  try {\n    const res = await axiosConfig({\n      method: 'post',\n      url: `${baseUrl}/`,\n      data: newProduct,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst updateProduct = async (id, newProduct) => {\n  try {\n    const res = await axiosConfig({\n      method: 'put',\n      url: `${baseUrl}/${id}/`,\n      data: newProduct,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nconst deleteProduct = async (id) => {\n  try {\n    const res = await axiosConfig({\n      method: 'delete',\n      url: `${baseUrl}/${id}/`,\n    });\n    return res;\n  } catch (err) {\n    return err.response;\n  }\n};\nexport default {\n  getAllProducts,\n  getIndivProduct,\n  addProduct,\n  updateProduct,\n  deleteProduct,\n};\n"]},"metadata":{},"sourceType":"module"}