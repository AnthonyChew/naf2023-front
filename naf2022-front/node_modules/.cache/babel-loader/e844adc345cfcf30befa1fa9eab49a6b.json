{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{makeStyles}from'@material-ui/core/styles';import Typography from'@material-ui/core/Typography';// import { useSelector } from 'react-redux';\nimport React,{useState}from'react';// import clsx from 'clsx';\nimport{Table,TableBody,TableCell,TableHead,TableRow,Checkbox,IconButton,Collapse,Box}from'@material-ui/core';import KeyboardArrowDownIcon from'@material-ui/icons/KeyboardArrowDown';import KeyboardArrowUpIcon from'@material-ui/icons/KeyboardArrowUp';import Button from'@material-ui/core/Button';import AddProduct from'./AddProduct';var useRowStyles=makeStyles(function(theme){return{root:{// overflow: 'scroll',\n'& > *':{borderBottom:'unset'}},pdtAndImg:{display:'flex',alignItems:'center'},pdtImg:{// marginTop: theme.spacing(1),\n// marginBottom: theme.spacing(1),\nmaxHeight:70}};});var reducer=function reducer(accumulator,currentValue){return accumulator+currentValue;};export default function ProductRow(props){var row=props.row,isItemSelected=props.isItemSelected,labelId=props.labelId,selected=props.selected,setSelected=props.setSelected,isNested=props.isNested;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var classes=useRowStyles();var _id=row._id,colours=row.colours,sizes=row.sizes,quantityBought=row.quantityBought,attribute1=row.attribute1,attribute2=row.attribute2,totalEarned=row.totalEarned,quantitySold=row.quantitySold,price=row.price,total=row.total,name=row.name,productName=row.productName,imghref=row.imghref;var quantity=row.quantity;quantity=quantity?quantity:quantityBought;var totalQuantity=0;if(colours.length>0){for(var i=0;i<quantity.length;i++){var subarray=quantity[i];var subarrayTotal=subarray.reduce(reducer);totalQuantity+=subarrayTotal;}}else{totalQuantity=quantity[0].reduce(reducer);}if(totalQuantity>=Number.MAX_SAFE_INTEGER){totalQuantity=Number.MAX_SAFE_INTEGER;}var variants=[];//transform the data\nif(colours.length>0){for(var _i=0;_i<colours.length;_i++){if(row.sizes.length>0){for(var j=0;j<sizes.length;j++){variants.push({colour:colours[_i],size:sizes[j],quantity:quantity[_i][j]});}}else{variants.push({colour:colours[_i],quantity:quantity[_i][0]});}}}else{for(var _j=0;_j<sizes.length;_j++){variants.push({size:sizes[_j],quantity:quantity[0][_j]});}}var handleClick=function handleClick(event,id){var selectedIndex=selected.indexOf(id);var newSelected=[];if(selectedIndex===-1){newSelected=newSelected.concat(selected,id);}else if(selectedIndex===0){newSelected=newSelected.concat(selected.slice(1));}else if(selectedIndex===selected.length-1){newSelected=newSelected.concat(selected.slice(0,-1));}else if(selectedIndex>0){newSelected=newSelected.concat(selected.slice(0,selectedIndex),selected.slice(selectedIndex+1));}setSelected(newSelected);};//EDIT PRODUCT DIALOG\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openEdit=_useState4[0],setOpenEdit=_useState4[1];var handleClickOpen=function handleClickOpen(){setOpenEdit(true);};var handleClose=function handleClose(){setOpenEdit(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableRow,{hover:true,role:\"checkbox\",\"aria-checked\":isItemSelected,tabIndex:-1,key:row.name,selected:isItemSelected,className:variants.length>0&&classes.root},!isNested&&/*#__PURE__*/React.createElement(TableCell,{padding:\"checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{checked:isItemSelected,inputProps:{'aria-labelledby':labelId},onClick:function onClick(event){return handleClick(event,row._id);}})),/*#__PURE__*/React.createElement(TableCell,{padding:\"checkbox\"},variants.length>0&&/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"expand row\",size:\"small\",onClick:function onClick(){return setOpen(!open);}},open?/*#__PURE__*/React.createElement(KeyboardArrowUpIcon,null):/*#__PURE__*/React.createElement(KeyboardArrowDownIcon,null))),/*#__PURE__*/React.createElement(TableCell,{component:\"th\",id:labelId,scope:\"row\"// padding=\"none\"\n},/*#__PURE__*/React.createElement(\"div\",{className:classes.pdtAndImg},imghref&&imghref!==''?/*#__PURE__*/React.createElement(\"img\",{src:imghref,alt:name,style:{width:'60px'},className:classes.pdtImg}):/*#__PURE__*/React.createElement(\"img\",{style:{width:'60px'},className:classes.pdtImg}),/*#__PURE__*/React.createElement(\"span\",{style:{marginLeft:\"20px\"}},productName||name))),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},totalQuantity>10000000?'Unlimited':totalQuantity),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},total||totalEarned||quantitySold*price),!isNested&&/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",size:\"small\",onClick:handleClickOpen,id:\"addProduct\"},\"Edit\"),openEdit&&/*#__PURE__*/React.createElement(AddProduct//callback\n,{parentCallback:handleClose,pdtName:name,pdtDesc:row.description,pdtCat:row.category,pdtPrice:price,pdtAtt1:attribute1,pdtAtt1Options:colours,pdtAtt2:attribute2,pdtAtt2Options:sizes,pdtCollect:row.canCollect,pdtDeliver:row.canDeliver,pdtQuantity:row.quantity,pdtPreorder:row.isPreOrder,pdtLeadtime:row.leadTime,pdtImages:row.images,_id:_id,type:\"edit\"}))),variants.length>0&&/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{style:{paddingBottom:0,paddingTop:0},colSpan:6},/*#__PURE__*/React.createElement(Collapse,{in:open,timeout:\"auto\",unmountOnExit:true},/*#__PURE__*/React.createElement(Box,{margin:2},/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",gutterBottom:true,component:\"div\"},\"Variants for \",name||productName),/*#__PURE__*/React.createElement(Table,{size:\"small\",\"aria-label\":\"pdtVariants\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,colours.length>1&&/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},attribute1),sizes.length>1&&/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},attribute2),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Quantity\"))),/*#__PURE__*/React.createElement(TableBody,null,variants.map(function(variant){return/*#__PURE__*/React.createElement(TableRow,{key:variant.pdtID},variant.colour&&/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},variant.colour),variant.size&&/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},variant.size),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},variant.quantity>100000?'Unlimited':variant.quantity));}))))))));}// TableRowVendor.propTypes = {\n//   row: PropTypes.shape({\n//     calories: PropTypes.number.isRequired,\n//     carbs: PropTypes.number.isRequired,\n//     fat: PropTypes.number.isRequired,\n//     history: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         amount: PropTypes.number.isRequired,\n//         customerId: PropTypes.string.isRequired,\n//         date: PropTypes.string.isRequired,\n//       })\n//     ).isRequired,\n//     name: PropTypes.string.isRequired,\n//     price: PropTypes.number.isRequired,\n//     protein: PropTypes.number.isRequired,\n//   }).isRequired,\n// };\n//end","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/MarketPlacePage/ProductRow.js"],"names":["makeStyles","Typography","React","useState","Table","TableBody","TableCell","TableHead","TableRow","Checkbox","IconButton","Collapse","Box","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Button","AddProduct","useRowStyles","theme","root","borderBottom","pdtAndImg","display","alignItems","pdtImg","maxHeight","reducer","accumulator","currentValue","ProductRow","props","row","isItemSelected","labelId","selected","setSelected","isNested","open","setOpen","classes","_id","colours","sizes","quantityBought","attribute1","attribute2","totalEarned","quantitySold","price","total","name","productName","imghref","quantity","totalQuantity","length","i","subarray","subarrayTotal","reduce","Number","MAX_SAFE_INTEGER","variants","j","push","colour","size","handleClick","event","id","selectedIndex","indexOf","newSelected","concat","slice","openEdit","setOpenEdit","handleClickOpen","handleClose","width","marginLeft","description","category","canCollect","canDeliver","isPreOrder","leadTime","images","paddingBottom","paddingTop","map","variant","pdtID"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import { useSelector } from 'react-redux';\nimport React, { useState } from 'react';\n// import clsx from 'clsx';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Checkbox,\n  IconButton,\n  Collapse,\n  Box,\n} from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Button from '@material-ui/core/Button';\nimport AddProduct from './AddProduct';\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    // overflow: 'scroll',\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  pdtAndImg: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  pdtImg: {\n    \n    // marginTop: theme.spacing(1),\n    // marginBottom: theme.spacing(1),\n    maxHeight: 70,\n  },\n}));\n\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\n\nexport default function ProductRow(props) {\n  const {\n    row,\n    isItemSelected,\n    labelId,\n    selected,\n    setSelected,\n    isNested,\n  } = props;\n\n  const [open, setOpen] = useState(false);\n  const classes = useRowStyles();\n\n  const {\n    _id,\n    colours,\n    sizes,\n    quantityBought, //Orders of user\n    attribute1,\n    attribute2,\n    totalEarned,\n    quantitySold,\n    price,\n    total,\n    name,\n    productName,\n    imghref,\n  } = row;\n  let { quantity } = row;\n  quantity = quantity ? quantity : quantityBought;\n  let totalQuantity = 0;\n  if (colours.length > 0) {\n    for (var i = 0; i < quantity.length; i++) {\n      var subarray = quantity[i];\n      var subarrayTotal = subarray.reduce(reducer);\n      totalQuantity += subarrayTotal;\n    }\n  } else {\n    totalQuantity = quantity[0].reduce(reducer);\n  }\n  if (totalQuantity >= Number.MAX_SAFE_INTEGER) {\n    totalQuantity = Number.MAX_SAFE_INTEGER;\n  }\n  let variants = [];\n  //transform the data\n  if (colours.length > 0) {\n    for (let i = 0; i < colours.length; i++) {\n      if (row.sizes.length > 0) {\n        for (let j = 0; j < sizes.length; j++) {\n          variants.push({\n            colour: colours[i],\n            size: sizes[j],\n            quantity: quantity[i][j],\n          });\n        }\n      } else {\n        variants.push({\n          colour: colours[i],\n          quantity: quantity[i][0],\n        });\n      }\n    }\n  } else {\n    for (let j = 0; j < sizes.length; j++) {\n      variants.push({\n        size: sizes[j],\n        quantity: quantity[0][j],\n      });\n    }\n  }\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  //EDIT PRODUCT DIALOG\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpenEdit(true);\n  };\n  const handleClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <React.Fragment>\n      <TableRow\n        hover\n        role=\"checkbox\"\n        aria-checked={isItemSelected}\n        tabIndex={-1}\n        key={row.name}\n        selected={isItemSelected}\n        className={variants.length > 0 && classes.root}\n      >\n        {!isNested && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              checked={isItemSelected}\n              inputProps={{ 'aria-labelledby': labelId }}\n              onClick={(event) => handleClick(event, row._id)}\n            />\n          </TableCell>\n        )}\n        <TableCell padding=\"checkbox\">\n          {variants.length > 0 && (\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          )}\n        </TableCell>\n        <TableCell\n          component=\"th\"\n          id={labelId}\n          scope=\"row\"\n          // padding=\"none\"\n        >\n          <div className={classes.pdtAndImg}>\n            {imghref && imghref !== '' ? (\n              <img\n                src={imghref}\n                alt={name}\n                style={{ width: '60px' }}\n                className={classes.pdtImg}\n              />\n            ) : (\n              <img style={{ width: '60px' }} className={classes.pdtImg} />\n            )}\n\n            <span style={{marginLeft: \"20px\"}}>{productName || name}</span>\n          </div>\n        </TableCell>\n        <TableCell align=\"center\">\n          {totalQuantity > 10000000 ? 'Unlimited' : totalQuantity}\n        </TableCell>\n        <TableCell align=\"center\">\n          {total || totalEarned || quantitySold * price}\n        </TableCell>\n        {!isNested && (\n          <TableCell align=\"center\">\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={handleClickOpen}\n              id=\"addProduct\"\n            >\n              Edit\n            </Button>\n            {openEdit && (\n              <AddProduct\n                //callback\n                parentCallback={handleClose}\n                pdtName={name}\n                pdtDesc={row.description}\n                pdtCat={row.category}\n                pdtPrice={price}\n                pdtAtt1={attribute1}\n                pdtAtt1Options={colours}\n                pdtAtt2={attribute2}\n                pdtAtt2Options={sizes}\n                pdtCollect={row.canCollect}\n                pdtDeliver={row.canDeliver}\n                pdtQuantity={row.quantity}\n                pdtPreorder={row.isPreOrder}\n                pdtLeadtime={row.leadTime}\n                pdtImages={row.images}\n                _id={_id}\n                type=\"edit\"\n              />\n            )}\n            {/* {console.log(row)} */}\n          </TableCell>\n        )}\n      </TableRow>\n      {variants.length > 0 && (\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={2}>\n                <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\n                  Variants for {name || productName}\n                </Typography>\n                <Table size=\"small\" aria-label=\"pdtVariants\">\n                  <TableHead>\n                    <TableRow>\n                      {/* <TableCell>Product ID</TableCell> */}\n                      {colours.length > 1 && (\n                        <TableCell align=\"center\">{attribute1}</TableCell>\n                      )}\n                      {sizes.length > 1 && (\n                        <TableCell align=\"center\">{attribute2}</TableCell>\n                      )}\n                      <TableCell align=\"center\">Quantity</TableCell>\n                      {/* <TableCell align=\"right\">Unit price ($)</TableCell> */}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {variants.map((variant) => (\n                      <TableRow key={variant.pdtID}>\n                        {variant.colour && (\n                          <TableCell align=\"center\">{variant.colour}</TableCell>\n                        )}\n                        {variant.size && (\n                          <TableCell align=\"center\">{variant.size}</TableCell>\n                        )}\n                        <TableCell align=\"center\">\n                          {variant.quantity > 100000\n                            ? 'Unlimited'\n                            : variant.quantity}\n                        </TableCell>\n                        {/* <TableCell align=\"right\">{variant.unitPrice}</TableCell> */}\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      )}\n    </React.Fragment>\n  );\n}\n\n// TableRowVendor.propTypes = {\n//   row: PropTypes.shape({\n//     calories: PropTypes.number.isRequired,\n//     carbs: PropTypes.number.isRequired,\n//     fat: PropTypes.number.isRequired,\n//     history: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         amount: PropTypes.number.isRequired,\n//         customerId: PropTypes.string.isRequired,\n//         date: PropTypes.string.isRequired,\n//       })\n//     ).isRequired,\n//     name: PropTypes.string.isRequired,\n//     price: PropTypes.number.isRequired,\n//     protein: PropTypes.number.isRequired,\n//   }).isRequired,\n// };\n\n//end\n"]},"metadata":{},"sourceType":"module"}