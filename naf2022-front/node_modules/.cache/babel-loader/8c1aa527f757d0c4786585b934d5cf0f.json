{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\naf2022-front\\\\src\\\\MarketPlacePage\\\\ProductPopup.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { useDispatch } from 'react-redux';\nimport { addProductToCart } from '../reducers/CartReducer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Quantity from '../utils/Quantity';\nimport Slider from 'react-slick';\nimport LinkButton from '../utils/LinkButton';\nimport ConfirmationDialog from '../Components/ConfirmationDialog';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport { ReactComponent as Vector303 } from \"@svgr/webpack?-svgo,+titleProp,+ref!./2022SVG/Vector 303.svg\";\nimport { ReactComponent as Vector304 } from \"@svgr/webpack?-svgo,+titleProp,+ref!./2022SVG/Vector 304.svg\";\nimport { ReactComponent as Vector305 } from \"@svgr/webpack?-svgo,+titleProp,+ref!./2022SVG/Vector 305.svg\";\nimport { ReactComponent as Vector306 } from \"@svgr/webpack?-svgo,+titleProp,+ref!./2022SVG/Vector 306.svg\";\nimport { ReactComponent as Vector307 } from \"@svgr/webpack?-svgo,+titleProp,+ref!./2022SVG/Vector 307.svg\";\nimport { ReactComponent as Vector308 } from \"@svgr/webpack?-svgo,+titleProp,+ref!./2022SVG/Vector 308.svg\";\nimport { alpha } from '@material-ui/core/styles/colorManipulator';\nimport { isValid } from 'date-fns';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative'\n  },\n  bottomSeparator: {\n    marginBottom: theme.spacing(3)\n  },\n  pdtOptions: {\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    marginTop: theme.spacing(1)\n  },\n  actionButton: {\n    display: 'inline-block',\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(2)\n  },\n  carousel: {\n    flexBasis: 0,\n    flexShrink: 1,\n    flexGrow: 1,\n    minHeight: 0,\n    minWidth: 0,\n    paddingRight: theme.spacing(3) // alignSelf: 'flex-start',\n\n  },\n  pdtDetails: {\n    flexBasis: 0,\n    flexShrink: 1,\n    flexGrow: 1\n  },\n  img: {\n    // display: 'block',\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    objectFit: 'cover',\n    width: '100%'\n  },\n  dots: {\n    position: 'static'\n  },\n  [theme.breakpoints.down('xs')]: {\n    carousel: {\n      flexBasis: 'auto',\n      paddingRight: 0,\n      paddingBottom: theme.spacing(3)\n    },\n    pdtDetails: {\n      flexBasis: 'auto'\n    }\n  }\n}));\nconst DialogContent = withStyles(theme => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    // maxHeight: '60vh',\n    overflowY: 'auto'\n  },\n  [theme.breakpoints.down('md')]: {\n    root: {\n      // backgroundColor: 'pink',\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    }\n  },\n  [theme.breakpoints.down('xs')]: {\n    root: {\n      // backgroundColor: 'orange',\n      maxWidth: 'lg',\n      margin: theme.spacing(1),\n      padding: theme.spacing(2)\n    }\n  }\n}))(MuiDialogContent);\nexport default function ProductPopup(props) {\n  const {\n    product,\n    parentCallback,\n    images\n  } = props;\n  const {\n    _id,\n    name,\n    alt,\n    price,\n    description,\n    quantity,\n    attribute1,\n    attribute2,\n    canCollect,\n    canDeliver,\n    sizes,\n    colours,\n    vendorId,\n    vendorName,\n    additionalPurchases,\n    leadTime\n  } = product;\n  const classes = useStyles();\n  const dispatch = useDispatch(); // TODO: Test if having No size/no colour will produce error\n  //DIALOG ACTIONS\n\n  const handleClose = () => {\n    parentCallback();\n  }; //PRODUCT OPTIONS STATES\n\n\n  const [colour, setColour] = useState(colours.length > 0 ? colours[0] : null);\n  const [size, setSize] = useState(sizes.length > 0 ? sizes[0] : null);\n  const [quantityBought, setQuantity] = useState(1);\n  const [indivQuantity, setIndivQuantity] = useState(null);\n  const allProductsInCart = useSelector(state => {\n    return state.addedProducts;\n  });\n  const [varNumInCart, setVarInCart] = useState(0);\n  useEffect(() => {\n    if (allProductsInCart === undefined) return;else {\n      const relevantPdt = allProductsInCart.find(product => product._id === _id); // console.log(relevantPdt);\n\n      if (relevantPdt) {\n        const varExists = relevantPdt.variations.find(pdt => pdt.colour === colour && pdt.size === size); // console.log(varExists);\n\n        if (varExists) {\n          setVarInCart(varExists.quantity);\n        } else {\n          setVarInCart(0);\n        }\n      } else {\n        setVarInCart(0);\n      }\n    }\n  }, [allProductsInCart, _id, colour, size]);\n\n  const addToCart = () => {\n    // console.log('ADD TO CART');\n    const newProduct = { ...product,\n      _id: _id,\n      image: images.length > 0 ? images[0] : null,\n      quantity: quantityBought,\n      stock: quantity,\n      size: size,\n      colour: colour\n    };\n    delete newProduct['images'];\n    delete newProduct['description'];\n    delete newProduct['quantitySold']; // console.log(newProduct);\n\n    dispatch(addProductToCart(newProduct));\n  }; //confirmation dialog for add to cart\n\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogResult = continueAction => {\n    setOpen(false);\n\n    if (continueAction) {\n      addToCart();\n      handleOpenSnackbar();\n    }\n  };\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  const handleOpenSnackbar = () => {\n    setSnackbarOpen(true);\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n\n  useEffect(() => {\n    let indivQuantity = null;\n    let i = 0;\n    let j = 0;\n\n    if (colour !== null) {\n      const row = colours.indexOf(colour);\n      i = row;\n\n      if (size !== null) {\n        const col = sizes.indexOf(size);\n        indivQuantity = quantity[row][col];\n        j = col;\n      } else if (sizes.length === 0) {\n        //no sizes, only colours (1st element of the array)\n        indivQuantity = quantity[row][0];\n        j = 0;\n      }\n    } else if (size !== null) {\n      const col = sizes.indexOf(size);\n      i = 0;\n\n      if (colours.length === 0) {\n        //no colours, only sizes\n        indivQuantity = quantity[0][col];\n        j = col;\n      }\n    } else {\n      indivQuantity = quantity[0][0];\n      j = 0;\n    }\n\n    if (additionalPurchases != null) {\n      for (let additionalPurchase of additionalPurchases) {\n        indivQuantity -= additionalPurchase[i][j];\n      }\n    }\n\n    setIndivQuantity(indivQuantity);\n  }, [colour, colours, quantity, size, sizes, additionalPurchases]);\n\n  const setColourHandler = (event, newColour) => {\n    if (newColour !== null) {\n      setColour(newColour);\n    }\n  };\n\n  const setSizeHandler = (event, newSize) => {\n    if (newSize !== null) {\n      setSize(newSize);\n    }\n  }; // const theme = useTheme();\n  // const dialogSize = useMediaQuery(theme.breakpoints.down('xs'));\n\n\n  const settings = {\n    dots: true,\n    //dialogSize ? false : true,\n    dotsClass: `slick-dots ${classes.dots}`,\n    infinite: true,\n    arrows: false,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    adaptiveHeight: true\n  }; // const date1 = '14 February 2022';\n  // const date2 = '23 February 2022';\n\n  const date1 = '23 February 2022';\n  const date2 = '09 March 2022';\n\n  const isValidPurchase = (date, leadTime) => {\n    const dateObj = new Date();\n    dateObj.setDate(dateObj.getDate() + leadTime);\n\n    if (dateObj > new Date(date)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"product popup\",\n    open: true,\n    className: classes.root,\n    fullWidth: true,\n    maxWidth: \"md\" //or \"lg\"\n    // fullScreen={dialogSize}\n    ,\n    scroll: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    style: {\n      backgroundColor: '#FDFBE2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClose,\n    style: {\n      position: 'absolute',\n      top: '0px',\n      right: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.carousel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }), images.map((image, index) => /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    className: classes.img,\n    src: image,\n    alt: alt,\n    style: {\n      zIndex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pdtDetails,\n    style: {\n      zIndex: '1',\n      color: '#033F63'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClose,\n    style: {\n      position: 'absolute',\n      top: '0px',\n      right: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 11,\n    style: {\n      zIndex: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography // className={classes.bottomSeparator}\n  , {\n    variant: \"h4\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, description), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, \"$\", Number.isInteger(price) ? price : price.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, colours.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"h2\",\n    className: classes.pdtOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 19\n    }\n  }, attribute1), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: colour,\n    exclusive: true,\n    onChange: setColourHandler,\n    \"aria-label\": \"select attribute1 option\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 19\n    }\n  }, colours.map((colour, index) => /*#__PURE__*/React.createElement(ToggleButton, {\n    key: index,\n    value: colour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 23\n    }\n  }, colour)))), sizes.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"h2\",\n    className: classes.pdtOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }, attribute2), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: size,\n    exclusive: true,\n    onChange: setSizeHandler,\n    \"aria-label\": \"select attribute2 option\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 19\n    }\n  }, sizes.map((size, index) => /*#__PURE__*/React.createElement(ToggleButton, {\n    key: index,\n    value: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 23\n    }\n  }, size))))), /*#__PURE__*/React.createElement(Quantity, {\n    quantity: quantityBought,\n    changeState: quantity => setQuantity(quantity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, canCollect && canDeliver ? 'You can receive this product via self-collection or delivery.' : canCollect ? 'This product must be self-collected.' : 'This product must be delivered.'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, \"Lead Time: \", leadTime, \" days (For self-collection) \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 64\n    }\n  })), isValidPurchase(date1, leadTime) ? /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#00FF00'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, \"This product is available for collection on 23 Feb.\") : /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#FF0000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }\n  }, \"This product is not available for collection on 23 Feb.\"), isValidPurchase(date2, leadTime) ? /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#00FF00'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 15\n    }\n  }, \"This product is available for collection on 09 Mar.\") : /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#FF0000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }, \"This product is not available for collection on 09 Mar.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    style: {\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LinkButton, {\n    to: `/vendorpage/${vendorId}`,\n    className: classes.actionButton,\n    variant: \"contained\",\n    style: {\n      backgroundColor: '#28666E',\n      color: '#FDFBE2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 19\n    }\n  }, \"View Vendor\")), /*#__PURE__*/React.createElement(Grid, {\n    xs: 6,\n    style: {\n      minWidth: '180px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.actionButton,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleClickOpen //confirmation before adding to cart\n    ,\n    disabled: quantityBought + varNumInCart > indivQuantity // disabled\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 19\n    }\n  }, \"Add to Cart\"))), open && /*#__PURE__*/React.createElement(ConfirmationDialog //callback\n  , {\n    title: \"Add this product to cart?\",\n    content: `${quantityBought}x ${name} ${attribute1.length !== 0 ? `with ${attribute1}: ${colour}` : ''} ${attribute2.length !== 0 ? `and ${attribute2}: ${size}` : ''}`,\n    parentCallback: handleDialogResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: snackbarOpen,\n    autoHideDuration: 6000,\n    onClose: handleCloseSnackbar,\n    message: `${quantityBought}x ${name} ${attribute1.length !== 0 ? `with ${attribute1}: ${colour}` : ''} ${attribute2.length !== 0 ? `and ${attribute2}: ${size}` : ''} has been added to your cart.`,\n    action: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleCloseSnackbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 23\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }\n  }, \"There \", indivQuantity === 1 ? 'is' : 'are', \" currently\", ' ', indivQuantity > 100 ? 'many' : indivQuantity, \" in stock.\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }\n  }, \"There \", varNumInCart === 1 ? 'is' : 'are', \" currently \", varNumInCart, ' ', \"in your cart.\")))));\n}","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/naf2022-front/src/MarketPlacePage/ProductPopup.js"],"names":["React","useEffect","useState","useSelector","withStyles","makeStyles","useTheme","Button","Dialog","MuiDialogContent","Typography","ToggleButton","ToggleButtonGroup","useDispatch","addProductToCart","useMediaQuery","Quantity","Slider","LinkButton","ConfirmationDialog","Snackbar","IconButton","CloseIcon","Grid","Hidden","alpha","isValid","useStyles","theme","root","position","bottomSeparator","marginBottom","spacing","pdtOptions","textTransform","fontWeight","marginTop","actionButton","display","marginRight","carousel","flexBasis","flexShrink","flexGrow","minHeight","minWidth","paddingRight","pdtDetails","img","paddingLeft","objectFit","width","dots","breakpoints","down","paddingBottom","DialogContent","alignItems","overflowY","flexDirection","flexWrap","maxWidth","margin","padding","ProductPopup","props","product","parentCallback","images","_id","name","alt","price","description","quantity","attribute1","attribute2","canCollect","canDeliver","sizes","colours","vendorId","vendorName","additionalPurchases","leadTime","classes","dispatch","handleClose","colour","setColour","length","size","setSize","quantityBought","setQuantity","indivQuantity","setIndivQuantity","allProductsInCart","state","addedProducts","varNumInCart","setVarInCart","undefined","relevantPdt","find","varExists","variations","pdt","addToCart","newProduct","image","stock","open","setOpen","handleClickOpen","handleDialogResult","continueAction","handleOpenSnackbar","snackbarOpen","setSnackbarOpen","handleCloseSnackbar","i","j","row","indexOf","col","additionalPurchase","setColourHandler","event","newColour","setSizeHandler","newSize","settings","dotsClass","infinite","arrows","autoplay","speed","slidesToShow","slidesToScroll","adaptiveHeight","date1","date2","isValidPurchase","date","dateObj","Date","setDate","getDate","backgroundColor","top","right","map","index","zIndex","color","Number","isInteger","toFixed","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { useDispatch } from 'react-redux';\nimport { addProductToCart } from '../reducers/CartReducer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Quantity from '../utils/Quantity';\nimport Slider from 'react-slick';\nimport LinkButton from '../utils/LinkButton';\nimport ConfirmationDialog from '../Components/ConfirmationDialog';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport { ReactComponent as Vector303 } from './2022SVG/Vector 303.svg';\nimport { ReactComponent as Vector304 } from './2022SVG/Vector 304.svg';\nimport { ReactComponent as Vector305 } from './2022SVG/Vector 305.svg';\nimport { ReactComponent as Vector306 } from './2022SVG/Vector 306.svg';\nimport { ReactComponent as Vector307 } from './2022SVG/Vector 307.svg';\nimport { ReactComponent as Vector308 } from './2022SVG/Vector 308.svg';\nimport { alpha } from '@material-ui/core/styles/colorManipulator';\nimport { isValid } from 'date-fns';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n\n  bottomSeparator: {\n    marginBottom: theme.spacing(3),\n  },\n  pdtOptions: {\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    marginTop: theme.spacing(1),\n  },\n  actionButton: {\n    display: 'inline-block',\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },\n  carousel: {\n    flexBasis: 0,\n    flexShrink: 1,\n    flexGrow: 1,\n    minHeight: 0,\n    minWidth: 0,\n    paddingRight: theme.spacing(3),\n    // alignSelf: 'flex-start',\n  },\n  pdtDetails: {\n    flexBasis: 0,\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  img: {\n    // display: 'block',\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    objectFit: 'cover',\n    width: '100%',\n  },\n  dots: {\n    position: 'static',\n  },\n  [theme.breakpoints.down('xs')]: {\n    carousel: {\n      flexBasis: 'auto',\n      paddingRight: 0,\n      paddingBottom: theme.spacing(3),\n    },\n    pdtDetails: {\n      flexBasis: 'auto',\n    },\n  },\n}));\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    // maxHeight: '60vh',\n    overflowY: 'auto',\n  },\n  [theme.breakpoints.down('md')]: {\n    root: {\n      // backgroundColor: 'pink',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n    },\n  },\n  [theme.breakpoints.down('xs')]: {\n    root: {\n      // backgroundColor: 'orange',\n      maxWidth: 'lg',\n      margin: theme.spacing(1),\n      padding: theme.spacing(2),\n    },\n  },\n}))(MuiDialogContent);\n\nexport default function ProductPopup(props) {\n  const { product, parentCallback, images } = props;\n  const {\n    _id,\n    name,\n    alt,\n    price,\n    description,\n    quantity,\n    attribute1,\n    attribute2,\n    canCollect,\n    canDeliver,\n    sizes,\n    colours,\n    vendorId,\n    vendorName,\n    additionalPurchases,\n    leadTime,\n  } = product;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  // TODO: Test if having No size/no colour will produce error\n  //DIALOG ACTIONS\n  const handleClose = () => {\n    parentCallback();\n  };\n  //PRODUCT OPTIONS STATES\n  const [colour, setColour] = useState(colours.length > 0 ? colours[0] : null);\n  const [size, setSize] = useState(sizes.length > 0 ? sizes[0] : null);\n  const [quantityBought, setQuantity] = useState(1);\n  const [indivQuantity, setIndivQuantity] = useState(null);\n  const allProductsInCart = useSelector((state) => {\n    return state.addedProducts;\n  });\n  const [varNumInCart, setVarInCart] = useState(0);\n\n  useEffect(() => {\n    if (allProductsInCart === undefined) return;\n    else {\n      const relevantPdt = allProductsInCart.find(\n        (product) => product._id === _id\n      );\n      // console.log(relevantPdt);\n      if (relevantPdt) {\n        const varExists = relevantPdt.variations.find(\n          (pdt) => pdt.colour === colour && pdt.size === size\n        );\n        // console.log(varExists);\n        if (varExists) {\n          setVarInCart(varExists.quantity);\n        } else {\n          setVarInCart(0);\n        }\n      } else {\n        setVarInCart(0);\n      }\n    }\n  }, [allProductsInCart, _id, colour, size]);\n\n  const addToCart = () => {\n    // console.log('ADD TO CART');\n    const newProduct = {\n      ...product,\n      _id: _id,\n      image: images.length > 0 ? images[0] : null,\n      quantity: quantityBought,\n      stock: quantity,\n      size: size,\n      colour: colour,\n    };\n    delete newProduct['images'];\n    delete newProduct['description'];\n    delete newProduct['quantitySold'];\n    // console.log(newProduct);\n    dispatch(addProductToCart(newProduct));\n  };\n\n  //confirmation dialog for add to cart\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleDialogResult = (continueAction) => {\n    setOpen(false);\n    if (continueAction) {\n      addToCart();\n      handleOpenSnackbar();\n    }\n  };\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const handleOpenSnackbar = () => {\n    setSnackbarOpen(true);\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n\n  useEffect(() => {\n    let indivQuantity = null;\n    let i = 0;\n    let j = 0;\n    if (colour !== null) {\n      const row = colours.indexOf(colour);\n      i = row;\n      if (size !== null) {\n        const col = sizes.indexOf(size);\n        indivQuantity = quantity[row][col];\n        j = col;\n      } else if (sizes.length === 0) {\n        //no sizes, only colours (1st element of the array)\n        indivQuantity = quantity[row][0];\n        j = 0;\n      }\n    } else if (size !== null) {\n      const col = sizes.indexOf(size);\n      i = 0;\n      if (colours.length === 0) {\n        //no colours, only sizes\n        indivQuantity = quantity[0][col];\n        j = col;\n      }\n    } else {\n      indivQuantity = quantity[0][0];\n      j = 0;\n    }\n    if (additionalPurchases != null) {\n      for (let additionalPurchase of additionalPurchases) {\n        indivQuantity -= additionalPurchase[i][j];\n      }\n    }\n    setIndivQuantity(indivQuantity);\n  }, [colour, colours, quantity, size, sizes, additionalPurchases]);\n\n  const setColourHandler = (event, newColour) => {\n    if (newColour !== null) {\n      setColour(newColour);\n    }\n  };\n\n  const setSizeHandler = (event, newSize) => {\n    if (newSize !== null) {\n      setSize(newSize);\n    }\n  };\n\n  // const theme = useTheme();\n  // const dialogSize = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const settings = {\n    dots: true, //dialogSize ? false : true,\n    dotsClass: `slick-dots ${classes.dots}`,\n    infinite: true,\n    arrows: false,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    adaptiveHeight: true,\n  };\n\n  // const date1 = '14 February 2022';\n  // const date2 = '23 February 2022';\n  const date1 = '23 February 2022';\n  const date2 = '09 March 2022';\n\n  const isValidPurchase = (date, leadTime) => {\n    const dateObj = new Date();\n    dateObj.setDate(dateObj.getDate() + leadTime);\n    if (dateObj > new Date(date)) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"product popup\"\n      open={true}\n      className={classes.root}\n      fullWidth={true}\n      maxWidth=\"md\" //or \"lg\"\n      // fullScreen={dialogSize}\n      scroll=\"body\"\n    >\n      <DialogContent dividers style={{ backgroundColor: '#FDFBE2' }}>\n        {/* {dialogSize && (\n          <Toolbar style={{ width: '100%', justifyContent: 'flex-end' }}>\n            <IconButton\n              edge=\"end\"\n              color=\"secondary\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        )} */}\n\n        {/*\n        <Vector306 style={{ zIndex:0, position:'absolute', left:\"0px\", bottom:\"0px\"}} />\n        <Vector307 style={{ zIndex:0, position:'absolute', left:\"0px\", bottom:\"0px\"}} />\n        <Vector308 style={{ zIndex:0, position:'absolute', left:\"0px\", bottom:\"0px\"}} />\n        <Vector303 style={{ zIndex:0, position:'absolute', right:\"0px\", bottom:\"0px\"}} />\n        <Vector304 style={{ zIndex:0, position:'absolute', right:\"0px\", bottom:\"0px\"}} />\n        <Vector305 style={{ zIndex:0, position:'absolute', right:\"0px\", bottom:\"0px\"}} /> */}\n\n        <Hidden smUp>\n          <Grid xs={12}>\n            <Typography>\n              <br />\n            </Typography>\n            <IconButton\n              onClick={handleClose}\n              style={{ position: 'absolute', top: '0px', right: '0px' }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n        </Hidden>\n\n        <div className={classes.carousel}>\n          <Slider {...settings}>\n            {images.map((image, index) => (\n              <img\n                key={index}\n                className={classes.img}\n                src={image}\n                alt={alt}\n                style={{ zIndex: 1 }}\n              />\n            ))}\n          </Slider>\n        </div>\n        <div\n          className={classes.pdtDetails}\n          style={{ zIndex: '1', color: '#033F63' }}\n        >\n          <Hidden xsDown>\n            <Grid xs={12}>\n              <IconButton\n                onClick={handleClose}\n                style={{ position: 'absolute', top: '0px', right: '0px' }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Grid>\n          </Hidden>\n          <Grid xs={11} style={{ zIndex: 0 }}>\n            <Typography\n              // className={classes.bottomSeparator}\n              variant=\"h4\"\n              component=\"h1\"\n            >\n              {name}\n            </Typography>\n            <Typography paragraph>{description}</Typography>\n\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              ${Number.isInteger(price) ? price : price.toFixed(2)}\n            </Typography>\n            <div className={classes.bottomSeparator}>\n              {colours.length > 0 && (\n                <>\n                  <Typography\n                    variant=\"body1\"\n                    component=\"h2\"\n                    className={classes.pdtOptions}\n                  >\n                    {attribute1}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={colour}\n                    exclusive\n                    onChange={setColourHandler}\n                    aria-label=\"select attribute1 option\"\n                    size=\"small\"\n                  >\n                    {colours.map((colour, index) => (\n                      <ToggleButton key={index} value={colour}>\n                        {colour}\n                      </ToggleButton>\n                    ))}\n                  </ToggleButtonGroup>\n                </>\n              )}\n              {sizes.length > 0 && (\n                <>\n                  <Typography\n                    variant=\"body1\"\n                    component=\"h2\"\n                    className={classes.pdtOptions}\n                  >\n                    {attribute2}\n                  </Typography>\n                  <ToggleButtonGroup\n                    value={size}\n                    exclusive\n                    onChange={setSizeHandler}\n                    aria-label=\"select attribute2 option\"\n                    size=\"small\"\n                  >\n                    {sizes.map((size, index) => (\n                      <ToggleButton key={index} value={size}>\n                        {size}\n                      </ToggleButton>\n                    ))}\n                  </ToggleButtonGroup>\n                </>\n              )}\n            </div>\n            <Quantity\n              quantity={quantityBought}\n              changeState={(quantity) => setQuantity(quantity)}\n            />\n            <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n              {canCollect && canDeliver\n                ? 'You can receive this product via self-collection or delivery.'\n                : canCollect\n                ? 'This product must be self-collected.'\n                : 'This product must be delivered.'}\n            </Typography>\n            <br></br>\n\n            <Typography variant=\"body1\">\n              Lead Time: {leadTime} days (For self-collection) <br></br>\n              {/* {isValidPurchase(date1,leadTime) ? 'This product is available for collection on 14 Feb.' : 'This product is not available for collection on 14 Feb.'}\n              <br></br>\n              {isValidPurchase(date2,leadTime) ? 'This product is available for collection on 23 Feb.' : 'This product is not available for collection on 23 Feb.'} */}\n              {/* Lead time refers to the amount of days the vendor needs to prepare the product. <br></br>\n              Thus, the latest possible date of purchase will be the number of days before your indicated self-collection date.  */}\n            </Typography>\n\n            {isValidPurchase(date1, leadTime) ? (\n              <Typography style={{ color: '#00FF00' }}>\n                This product is available for collection on 23 Feb.\n              </Typography>\n            ) : (\n              <Typography style={{ color: '#FF0000' }}>\n                This product is not available for collection on 23 Feb.\n              </Typography>\n            )}\n            {isValidPurchase(date2, leadTime) ? (\n              <Typography style={{ color: '#00FF00' }}>\n                This product is available for collection on 09 Mar.\n              </Typography>\n            ) : (\n              <Typography style={{ color: '#FF0000' }}>\n                This product is not available for collection on 09 Mar.\n              </Typography>\n            )}\n\n            <div>\n              <Grid container xs={12} style={{ paddingBottom: '10px' }}>\n                <Typography xs={6}>\n                  <LinkButton\n                    to={`/vendorpage/${vendorId}`}\n                    className={classes.actionButton}\n                    variant=\"contained\"\n                    style={{ backgroundColor: '#28666E', color: '#FDFBE2' }}\n                  >\n                    View Vendor\n                  </LinkButton>\n                </Typography>\n                <Grid xs={6} style={{ minWidth: '180px' }}>\n                  <Button\n                    className={classes.actionButton}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleClickOpen} //confirmation before adding to cart\n                    disabled={quantityBought + varNumInCart > indivQuantity}\n\n                    // disabled\n                  >\n                    Add to Cart\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {open && (\n                <ConfirmationDialog\n                  //callback\n                  title=\"Add this product to cart?\"\n                  content={`${quantityBought}x ${name} ${\n                    attribute1.length !== 0\n                      ? `with ${attribute1}: ${colour}`\n                      : ''\n                  } ${\n                    attribute2.length !== 0 ? `and ${attribute2}: ${size}` : ''\n                  }`}\n                  parentCallback={handleDialogResult}\n                />\n              )}\n              <Snackbar\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                open={snackbarOpen}\n                autoHideDuration={6000}\n                onClose={handleCloseSnackbar}\n                message={`${quantityBought}x ${name} ${\n                  attribute1.length !== 0 ? `with ${attribute1}: ${colour}` : ''\n                } ${\n                  attribute2.length !== 0 ? `and ${attribute2}: ${size}` : ''\n                } has been added to your cart.`}\n                action={\n                  <React.Fragment>\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      onClick={handleCloseSnackbar}\n                    >\n                      <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                  </React.Fragment>\n                }\n              />\n            </div>\n            <Typography variant=\"subtitle2\" component=\"p\">\n              There {indivQuantity === 1 ? 'is' : 'are'} currently{' '}\n              {indivQuantity > 100 ? 'many' : indivQuantity} in stock.\n            </Typography>\n            <Typography variant=\"subtitle2\" component=\"p\">\n              There {varNumInCart === 1 ? 'is' : 'are'} currently {varNumInCart}{' '}\n              in your cart.\n            </Typography>\n          </Grid>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}