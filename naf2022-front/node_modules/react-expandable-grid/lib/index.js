/* eslint react/prop-types: 0 */
/* eslint react/jsx-no-bind: 0 */

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var SingleGridCell = (function (_React$Component) {
  _inherits(SingleGridCell, _React$Component);

  function SingleGridCell(props) {
    _classCallCheck(this, SingleGridCell);

    _get(Object.getPrototypeOf(SingleGridCell.prototype), 'constructor', this).call(this, props);

    this.state = {
      expanded: false,
      selected_id: '',
      window_width: window.innerWidth
    };
  }

  _createClass(SingleGridCell, [{
    key: 'cellClick',
    value: function cellClick(event) {
      this.props.handleCellClick(event);
    }
  }, {
    key: 'render',
    value: function render() {
      var SingleGridCellStyle = {
        background: 'url(' + this.props.SingleGridCellData['img'] + ') no-repeat center center',
        backgroundSize: this.props.cellSize,
        width: this.props.cellSize,
        height: this.props.cellSize,
        display: 'inline-block',
        margin: this.props.cellMargin,
        marginBottom: 25,
        position: 'relative'
      };

      return _react2['default'].createElement('li', { className: 'SingleGridCell', style: SingleGridCellStyle, id: this.props.id, onClick: this.cellClick.bind(this) });
    }
  }]);

  return SingleGridCell;
})(_react2['default'].Component);

var ReactExpandableGrid = (function (_React$Component2) {
  _inherits(ReactExpandableGrid, _React$Component2);

  function ReactExpandableGrid(props) {
    _classCallCheck(this, ReactExpandableGrid);

    _get(Object.getPrototypeOf(ReactExpandableGrid.prototype), 'constructor', this).call(this, props);

    this.state = {
      expanded: false,
      selected_id: '',
      gridData: JSON.parse(this.props.gridData)
    };
  }

  _createClass(ReactExpandableGrid, [{
    key: 'handleResize',
    value: function handleResize() {
      if (this.state.expanded) {
        var target = document.getElementById(this.state.selected_id);
        this.renderExpandedDetail(target);
      }
      this.makeItMobileFriendly();
    }
  }, {
    key: 'makeItMobileFriendly',
    value: function makeItMobileFriendly() {
      var leftPanel = document.getElementById('ExpandedDetail_left');
      var rightPanel = document.getElementById('ExpandedDetail_right');
      if (window.innerWidth < this.props.show_mobile_style_from_width) {
        leftPanel.style.display = 'none';
        rightPanel.style.width = '100%';
      } else {
        leftPanel.style.display = 'block';
        leftPanel.style.width = this.props.ExpandedDetail_left_width;
        rightPanel.style.width = this.props.ExpandedDetail_right_width;
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      window.addEventListener('resize', this.handleResize.bind(this));
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {}
  }, {
    key: 'renderExpandedDetail',
    value: function renderExpandedDetail(target) {
      var thisId = target.id;
      var thisIdNumber = parseInt(thisId.substring(10));
      var detail = document.getElementById('expandedDetail');
      var ol = target.parentNode;
      var lengthOfList = parseInt(ol.childNodes.length);
      var startingIndex = thisIdNumber + 1;

      var insertedFlag = false;

      ol.insertBefore(detail, ol.childNodes[lengthOfList]);

      for (var i = startingIndex; i < lengthOfList; i++) {
        if (ol.childNodes[i].className === 'SingleGridCell') {
          if (ol.childNodes[i].offsetTop !== ol.childNodes[thisIdNumber].offsetTop) {
            ol.childNodes[i].insertAdjacentElement('beforebegin', detail);
            insertedFlag = true;
            break;
          }
        }
      }

      if (insertedFlag === false) {
        ol.childNodes[lengthOfList - 1].insertAdjacentElement('afterend', detail);
      }

      var cell = document.getElementById(thisId);
      var arrow = document.getElementById('selected_arrow');
      cell.append(arrow);
      arrow.style.display = 'block';
    }
  }, {
    key: 'closeExpandedDetail',
    value: function closeExpandedDetail() {
      this.setState({
        expanded: false,
        selected_id: ''
      }, function afterStateChange() {
        var detail = document.getElementById('expandedDetail');
        detail.style.display = 'none';
        var arrow = document.getElementById('selected_arrow');
        arrow.style.display = 'none';
      });
    }
  }, {
    key: 'handleCellClick',
    value: function handleCellClick(event) {
      var target = event.target;
      var thisIdNumber = parseInt(event.target.id.substring(10));

      if (this.state.expanded) {
        // expanded == true
        if (this.state.selected_id === event.target.id) {
          // Clicking on already opened detail
          this.closeExpandedDetail();
          this.renderExpandedDetail(target);
        } else {
          // Clicking on a different thumbnail, when detail is already expanded
          this.setState({
            expanded: true,
            selected_id: event.target.id
          }, function afterStateChange() {
            var detail = document.getElementById('expandedDetail');
            var description = document.getElementById('ExpandedDetailDescription');
            var title = document.getElementById('ExpandedDetailTitle');
            var img = document.getElementById('ExpandedDetailImage');
            var DescriptionLink = document.getElementById('ExpandedDetailDescriptionLink');
            var ImageLink = document.getElementById('ExpandedDetailImageLink');
            description.innerHTML = this.state.gridData[thisIdNumber]['description'];
            title.innerHTML = this.state.gridData[thisIdNumber]['title'];
            img.src = this.state.gridData[thisIdNumber]['img'];
            DescriptionLink.href = this.state.gridData[thisIdNumber]['link'];
            ImageLink.href = this.state.gridData[thisIdNumber]['link'];

            this.renderExpandedDetail(target);

            detail.style.display = 'block';
          });
        }
      } else {
        // expanded == false
        this.setState({
          expanded: true,
          selected_id: event.target.id
        }, function afterStateChange() {
          var detail = document.getElementById('expandedDetail');
          var description = document.getElementById('ExpandedDetailDescription');
          var title = document.getElementById('ExpandedDetailTitle');
          var img = document.getElementById('ExpandedDetailImage');
          var DescriptionLink = document.getElementById('ExpandedDetailDescriptionLink');
          var ImageLink = document.getElementById('ExpandedDetailImageLink');
          description.innerHTML = this.state.gridData[thisIdNumber]['description'];
          title.innerHTML = this.state.gridData[thisIdNumber]['title'];
          img.src = this.state.gridData[thisIdNumber]['img'];
          DescriptionLink.href = this.state.gridData[thisIdNumber]['link'];
          ImageLink.href = this.state.gridData[thisIdNumber]['link'];

          this.renderExpandedDetail(target);

          detail.style.display = 'block';
        });
      }
    }
  }, {
    key: 'generateGrid',
    value: function generateGrid() {
      var grid = [];
      var idCounter = -1; // To help simplify mapping to object array indices. For example, <li> with 0th id corresponds to 0th child of <ol>
      var gridData = this.state.gridData;

      for (var i in gridData) {
        idCounter = idCounter + 1;
        var thisUniqueKey = 'grid_cell_' + idCounter.toString();
        grid.push(_react2['default'].createElement(SingleGridCell, { handleCellClick: this.handleCellClick.bind(this), key: thisUniqueKey, id: thisUniqueKey, cellMargin: this.props.cellMargin, SingleGridCellData: gridData[i], cellSize: this.props.cellSize }));
      }

      var cssforExpandedDetail = {
        backgroundColor: this.props.detailBackgroundColor,
        height: this.props.detailHeight,
        display: 'none',
        position: 'relative',
        padding: '20px',
        transition: 'display 2s ease-in-out 0.5s'
      };

      var cssforExpandedDetailImage = {
        display: 'inline-block',
        maxWidth: this.props.ExpandedDetail_image_size,
        width: '100%',
        height: 'auto',
        align: 'center',
        position: 'absolute',
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
        margin: 'auto'
      };

      var cssforExpandedDetailTitle = {
        backgroundColor: this.props.ExpandedDetail_title_bgColor,
        width: '100%',
        height: 'auto',
        marginBottom: '15px'
      };

      var cssforExpandedDetailDescription = {
        backgroundColor: this.props.ExpandedDetail_description_bgColor,
        color: this.props.ExpandedDetail_font_color,
        width: 'auto%',
        height: '80%',
        marginRight: '30px',
        marginLeft: '30px',
        textAlign: 'justify'
      };

      var cssforExpandedDetailLeft;
      var cssforExpandedDetailRight;

      cssforExpandedDetailLeft = {
        width: this.props.ExpandedDetail_left_width,
        height: '100%',
        float: 'left',
        position: 'relative'
      };

      cssforExpandedDetailRight = {
        width: this.props.ExpandedDetail_right_width,
        height: '100%',
        float: 'right',
        position: 'relative'
      };

      var cssForDescriptionLink = {
        textDecoration: 'none',
        position: 'relative',
        float: 'bottom',
        bottom: 20,
        cursor: 'pointer'
      };

      var cssForImageLink = {
        cursor: 'pointer'
      };

      var cssforExpandedDetailClose = {
        textDecoration: 'none',
        position: 'relative',
        float: 'right',
        top: 10,
        right: 10,
        cursor: 'pointer'
      };

      // Make Mobile Friendly
      if (window.innerWidth < this.props.show_mobile_style_from_width) {
        cssforExpandedDetailLeft = {
          width: '0%',
          height: '100%',
          float: 'left',
          position: 'relative',
          display: 'none'
        };

        cssforExpandedDetailRight = {
          width: '100%',
          height: '100%',
          float: 'right',
          position: 'relative'
        };
      }

      var closeX;
      if (this.props.ExpandedDetail_closeX_bool) {
        closeX = 'X';
      } else {
        closeX = '';
      }

      grid.push(_react2['default'].createElement(
        'li',
        { style: cssforExpandedDetail, key: 'expandedDetail', id: 'expandedDetail' },
        _react2['default'].createElement(
          'div',
          { id: 'ExpandedDetail_left', className: 'ExpandedDetail_left', style: cssforExpandedDetailLeft },
          _react2['default'].createElement(
            'a',
            { id: 'ExpandedDetailImageLink', style: cssForImageLink },
            _react2['default'].createElement('img', { id: 'ExpandedDetailImage', className: 'ExpandedDetailImage', style: cssforExpandedDetailImage })
          )
        ),
        _react2['default'].createElement(
          'div',
          { id: 'ExpandedDetail_right', className: 'ExpandedDetail_right', style: cssforExpandedDetailRight },
          _react2['default'].createElement(
            'div',
            { id: 'ExpandedDetail_close', key: 'ExpandedDetail_close', style: cssforExpandedDetailClose, onClick: this.closeExpandedDetail.bind(this) },
            closeX
          ),
          _react2['default'].createElement(
            'div',
            { id: 'ExpandedDetailTitle', className: 'ExpandedDetailTitle', style: cssforExpandedDetailTitle },
            ' Title '
          ),
          _react2['default'].createElement(
            'div',
            { id: 'ExpandedDetailDescription', className: 'ExpandedDetailDescription', style: cssforExpandedDetailDescription },
            ' Some Description'
          ),
          _react2['default'].createElement(
            'a',
            { id: 'ExpandedDetailDescriptionLink', style: cssForDescriptionLink },
            ' → Link '
          )
        )
      ));

      return grid;
    }
  }, {
    key: 'render',
    value: function render() {
      var rows = this.generateGrid();

      var cssForGridDetailExpansion = {
        width: '100%',
        position: 'relative'
      };

      var cssForGridList = {
        listStyle: 'none',
        padding: 0,
        display: 'inline-block'
      };

      var cssForTheGridHolder = {
        width: '100%',
        backgroundColor: this.props.bgColor,
        margin: 0,
        textAlign: 'center'
      };

      var cssForSelectedArrow = {
        width: 0,
        height: 0,
        borderLeft: '20px solid transparent',
        borderRight: '20px solid transparent',
        borderBottom: '30px solid' + this.props.detailBackgroundColor,
        marginTop: this.props.cellSize,
        marginLeft: this.props.cellSize / 2 - 20,
        display: 'none'
      };

      return _react2['default'].createElement(
        'div',
        { id: 'GridDetailExpansion', style: cssForGridDetailExpansion },
        _react2['default'].createElement(
          'div',
          { id: 'theGridHolder', style: cssForTheGridHolder },
          _react2['default'].createElement(
            'ol',
            { id: 'gridList', style: cssForGridList },
            rows
          )
        ),
        _react2['default'].createElement('div', { id: 'selected_arrow', style: cssForSelectedArrow })
      );
    }
  }]);

  return ReactExpandableGrid;
})(_react2['default'].Component);

ReactExpandableGrid.propTypes = {
  gridData: _react2['default'].PropTypes.string,
  cellSize: _react2['default'].PropTypes.number,
  cellMargin: _react2['default'].PropTypes.number,
  bgColor: _react2['default'].PropTypes.string,
  detailWidth: _react2['default'].PropTypes.string, // in %
  detailHeight: _react2['default'].PropTypes.number,
  detailBackgroundColor: _react2['default'].PropTypes.string,
  ExpandedDetail_right_width: _react2['default'].PropTypes.string, // in %
  ExpandedDetail_left_width: _react2['default'].PropTypes.string, // in %
  ExpandedDetail_description_bgColor: _react2['default'].PropTypes.string,
  ExpandedDetail_title_bgColor: _react2['default'].PropTypes.string,
  ExpandedDetail_img_bgColor: _react2['default'].PropTypes.string,
  ExpandedDetail_link_text: _react2['default'].PropTypes.string,
  ExpandedDetail_font_color: _react2['default'].PropTypes.string,
  ExpandedDetail_closeX_bool: _react2['default'].PropTypes.bool,
  show_mobile_style_from_width: _react2['default'].PropTypes.number
};

var data = [{ 'img': 'http://i.imgur.com/zIEjP6Q.jpg', 'link': 'https://www.instagram.com/p/BRFjVZtgSJD/', 'title': 'Westland Tai Poutini National Park', 'description': 'Photo by @christopheviseux / The Westland Tai Poutini National Park in New Zealand’s South Island offers a remarkable opportunity to take a guided walk on a glacier. A helicopter drop high on the Franz Josef Glacier, provides access to explore stunning ice formations and blue ice caves. Follow me for more images around the world @christopheviseux #newzealand #mountain #ice' }, { 'img': 'http://i.imgur.com/rCrvQTv.jpg', 'link': 'https://www.instagram.com/p/BQ6_Wa2gmdR/', 'title': 'Dubai Desert Conservation Reserve', 'description': 'Photo by @christopheviseux / Early morning flight on a hot air balloon ride above the Dubai Desert Conservation Reserve. Merely an hour drive from the city, the park was created to protect indigenous species and biodiversity. The Arabian Oryx, which was close to extinction, now has a population well over 100. There are many options to explore the desert and flying above may be one of the most mesmerizing ways. Follow me @christopheviseux for more images from the Middle East. #dubai #desert' }, { 'img': 'http://i.imgur.com/U8iVzVl.jpg', 'link': 'https://www.instagram.com/p/BQyfDiKAEq9/', 'title': 'Crumbling Reflections', 'description': 'Photo @pedromcbride // Crumbling Reflections: Much has changed in Cuba over the 17 years I have visited this island. But much has stayed the same. Time still ticks at a Cuban pace and old cars still run… I don’t know how... and while pockets of new construction and renovation exist thanks to a growing tourism boom, most buildings are crumbling and cracking under the Caribbean climate. But amidst the hardship, nostalgia and messy vitality, the Cuban people keep moving, like their cars. And somehow, they do it with a colorful friendliness and warmth that always amazes me. To see more, follow @pedromcbride #cuba #havana #photo #workshop @natgeoexpeditions #reflection #photooftheday #petemcbride.' }, { 'img': 'http://i.imgur.com/Ky9aJlE.jpg', 'link': 'https://www.instagram.com/p/BQxf6CEgD8p/', 'title': 'Impalas', 'description': 'Impetious young impala go head-to-head as they practice sparring. A talent they will need later in life when the rut begins. Photographed on assignment for @natgeotravel in Kruger National Park. For more images from Kruger, South Africa, follow @kengeiger #natgeotravel #krugernationalpark' }, { 'img': 'http://i.imgur.com/mf3qfzt.jpg', 'link': 'https://www.instagram.com/p/BQvy7gbgynF/', 'title': 'Elephants', 'description': 'Photo by @ronan_donovan // Two bull African elephants at dawn in Uganda\'s Murchison Falls National Park. See more from Uganda with @ronan_donovan.' }, { 'img': 'http://i.imgur.com/zIEjP6Q.jpg', 'link': 'https://www.instagram.com/p/BRFjVZtgSJD/', 'title': 'Westland Tai Poutini National Park', 'description': 'Photo by @christopheviseux / The Westland Tai Poutini National Park in New Zealand’s South Island offers a remarkable opportunity to take a guided walk on a glacier. A helicopter drop high on the Franz Josef Glacier, provides access to explore stunning ice formations and blue ice caves. Follow me for more images around the world @christopheviseux #newzealand #mountain #ice' }, { 'img': 'http://i.imgur.com/rCrvQTv.jpg', 'link': 'https://www.instagram.com/p/BQ6_Wa2gmdR/', 'title': 'Dubai Desert Conservation Reserve', 'description': 'Photo by @christopheviseux / Early morning flight on a hot air balloon ride above the Dubai Desert Conservation Reserve. Merely an hour drive from the city, the park was created to protect indigenous species and biodiversity. The Arabian Oryx, which was close to extinction, now has a population well over 100. There are many options to explore the desert and flying above may be one of the most mesmerizing ways. Follow me @christopheviseux for more images from the Middle East. #dubai #desert' }, { 'img': 'http://i.imgur.com/U8iVzVl.jpg', 'link': 'https://www.instagram.com/p/BQyfDiKAEq9/', 'title': 'Crumbling Reflections', 'description': 'Photo @pedromcbride // Crumbling Reflections: Much has changed in Cuba over the 17 years I have visited this island. But much has stayed the same. Time still ticks at a Cuban pace and old cars still run… I don’t know how... and while pockets of new construction and renovation exist thanks to a growing tourism boom, most buildings are crumbling and cracking under the Caribbean climate. But amidst the hardship, nostalgia and messy vitality, the Cuban people keep moving, like their cars. And somehow, they do it with a colorful friendliness and warmth that always amazes me. To see more, follow @pedromcbride #cuba #havana #photo #workshop @natgeoexpeditions #reflection #photooftheday #petemcbride.' }, { 'img': 'http://i.imgur.com/Ky9aJlE.jpg', 'link': 'https://www.instagram.com/p/BQxf6CEgD8p/', 'title': 'Impalas', 'description': 'Impetious young impala go head-to-head as they practice sparring. A talent they will need later in life when the rut begins. Photographed on assignment for @natgeotravel in Kruger National Park. For more images from Kruger, South Africa, follow @kengeiger #natgeotravel #krugernationalpark' }, { 'img': 'http://i.imgur.com/mf3qfzt.jpg', 'link': 'https://www.instagram.com/p/BQvy7gbgynF/', 'title': 'Elephants', 'description': 'Photo by @ronan_donovan // Two bull African elephants at dawn in Uganda\'s Murchison Falls National Park. See more from Uganda with @ronan_donovan.' }, { 'img': 'http://i.imgur.com/zIEjP6Q.jpg', 'link': 'https://www.instagram.com/p/BRFjVZtgSJD/', 'title': 'Westland Tai Poutini National Park', 'description': 'Photo by @christopheviseux / The Westland Tai Poutini National Park in New Zealand’s South Island offers a remarkable opportunity to take a guided walk on a glacier. A helicopter drop high on the Franz Josef Glacier, provides access to explore stunning ice formations and blue ice caves. Follow me for more images around the world @christopheviseux #newzealand #mountain #ice' }, { 'img': 'http://i.imgur.com/rCrvQTv.jpg', 'link': 'https://www.instagram.com/p/BQ6_Wa2gmdR/', 'title': 'Dubai Desert Conservation Reserve', 'description': 'Photo by @christopheviseux / Early morning flight on a hot air balloon ride above the Dubai Desert Conservation Reserve. Merely an hour drive from the city, the park was created to protect indigenous species and biodiversity. The Arabian Oryx, which was close to extinction, now has a population well over 100. There are many options to explore the desert and flying above may be one of the most mesmerizing ways. Follow me @christopheviseux for more images from the Middle East. #dubai #desert' }, { 'img': 'http://i.imgur.com/rCrvQTv.jpg', 'link': 'https://www.instagram.com/p/BQ6_Wa2gmdR/', 'title': 'Dubai Desert Conservation Reserve', 'description': 'Photo by @christopheviseux / Early morning flight on a hot air balloon ride above the Dubai Desert Conservation Reserve. Merely an hour drive from the city, the park was created to protect indigenous species and biodiversity. The Arabian Oryx, which was close to extinction, now has a population well over 100. There are many options to explore the desert and flying above may be one of the most mesmerizing ways. Follow me @christopheviseux for more images from the Middle East. #dubai #desert' }];

ReactExpandableGrid.defaultProps = {
  gridData: JSON.stringify(data),
  cellSize: 250,
  cellMargin: 25,
  bgColor: '#f2f2f2',
  detailWidth: '100%',
  detailHeight: 300,
  detailBackgroundColor: '#D9D9D9',
  ExpandedDetail_right_width: '60%',
  ExpandedDetail_left_width: '40%',
  ExpandedDetail_image_size: 300,
  ExpandedDetail_description_bgColor: '#D9D9D9',
  ExpandedDetail_title_bgColor: '#D9D9D9',
  ExpandedDetail_img_bgColor: '#D9D9D9',
  ExpandedDetail_link_text: '→ Link',
  ExpandedDetail_font_color: '#434343',
  ExpandedDetail_closeX_bool: true,
  show_mobile_style_from_width: 600
};

exports['default'] = ReactExpandableGrid;
module.exports = exports['default'];